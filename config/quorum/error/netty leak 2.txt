D:\jdk-17.0.1\bin\java.exe -agentlib:jdwp=transport=dt_socket,address=127.0.0.1:58843,suspend=y,server=n -Xmx1G -Xms1G -server -XX:+UseZGC -XX:MaxDirectMemorySize=2G -Dkafka.logs.dir=logs/ -Dlog4j.configuration=file:config/log4j.properties -Dio.netty.leakDetection.level=paranoid -Dio.netty.leakDetection.targetRecords=50 -javaagent:C:\Users\nicolchen\AppData\Local\JetBrains\IdeaIC2022.3\captureAgent\debugger-agent.jar=file:/C:/Users/nicolchen/AppData/Local/Temp/capture1.props -Dfile.encoding=UTF-8 @C:\Users\nicolchen\AppData\Local\Temp\idea_arg_file2049405498 kafka.Kafka config/kraft/server_idc_a.properties
Connected to the target VM, address: '127.0.0.1:58843', transport: 'socket'
SLF4J: A number (25) of logging calls during the initialization phase have been intercepted and are
SLF4J: now being replayed. These are subject to the filtering rules of the underlying logging system.
SLF4J: See also http://www.slf4j.org/codes.html#replay
[2025-08-08 16:34:03,445] INFO Registered kafka:type=kafka.Log4jController MBean (kafka.utils.Log4jControllerRegistration$)
[2025-08-08 16:34:04,595] INFO Setting -D jdk.tls.rejectClientInitiatedRenegotiation=true to disable client-initiated TLS renegotiation (org.apache.zookeeper.common.X509Util)
[2025-08-08 16:34:08,547] INFO [ControllerServer id=1] Starting controller (kafka.server.ControllerServer)
[2025-08-08 16:34:10,194] INFO Updated connection-accept-rate max connection creation rate to 2147483647 (kafka.network.ConnectionQuotas)
[2025-08-08 16:34:10,301] INFO [SocketServer listenerType=CONTROLLER, nodeId=1] Created data-plane acceptor and processors for endpoint : ListenerName(CONTROLLER) (kafka.network.SocketServer)
[2025-08-08 16:34:10,325] INFO authorizerStart completed for endpoint CONTROLLER. Endpoint is now READY. (org.apache.kafka.server.network.EndpointReadyFutures)
[2025-08-08 16:34:10,329] INFO [SharedServer id=1] Starting SharedServer (kafka.server.SharedServer)
[2025-08-08 16:34:11,533] INFO /jmx/rules/common.yaml: found 4 metric rules (io.opentelemetry.instrumentation.jmx.yaml.RuleParser)
[2025-08-08 16:34:11,563] INFO /jmx/rules/broker.yaml: found 34 metric rules (io.opentelemetry.instrumentation.jmx.yaml.RuleParser)
[2025-08-08 16:34:11,571] INFO /jmx/rules/controller.yaml: found 8 metric rules (io.opentelemetry.instrumentation.jmx.yaml.RuleParser)
[2025-08-08 16:34:12,378] INFO Deleted producer state snapshot D:\workspace_java\nicolchen\automq\kraft-combined-logs-idc-a\__cluster_metadata-0\00000000000000008785.snapshot (org.apache.kafka.storage.internals.log.SnapshotFile)
[2025-08-08 16:34:12,682] INFO [ProducerStateManager partition=__cluster_metadata-0] Loading producer state from snapshot file 'SnapshotFile(offset=10123, file=D:\workspace_java\nicolchen\automq\kraft-combined-logs-idc-a\__cluster_metadata-0\00000000000000010123.snapshot)' (org.apache.kafka.storage.internals.log.ProducerStateManager)
[2025-08-08 16:34:12,783] INFO Initialized snapshots with IDs SortedSet() from D:\workspace_java\nicolchen\automq\kraft-combined-logs-idc-a\__cluster_metadata-0 (kafka.raft.KafkaMetadataLog$)
[2025-08-08 16:34:12,787] INFO Created Gauge for kafka.network.threads.idle.rate (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:12,789] INFO Created Counter for kafka.broker.network.io (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:12,789] INFO Created Counter for kafka.broker.network.io (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:12,801] INFO Created Gauge for kafka.request.size.50p (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:12,803] INFO Created Gauge for kafka.request.size.99p (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:12,806] INFO Created Gauge for kafka.request.size.max (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:12,809] INFO Created Gauge for kafka.request.time.50p (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:12,812] INFO Created Gauge for kafka.request.time.99p (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:12,812] INFO Created Gauge for kafka.request.time.max (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:12,816] INFO Created Counter for kafka.request.queue.time.count (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:12,817] INFO Created Gauge for kafka.request.queue.time.50p (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:12,818] INFO Created Gauge for kafka.request.queue.time.99p (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:12,819] INFO Created Gauge for kafka.request.queue.time.max (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:12,822] INFO Created Counter for kafka.response.queue.time.count (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:12,824] INFO Created Gauge for kafka.response.queue.time.50p (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:12,825] INFO Created Gauge for kafka.response.queue.time.99p (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:12,826] INFO Created Gauge for kafka.response.queue.time.max (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:12,826] INFO Created Gauge for kafka.request.queue.size (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:12,827] INFO Created Gauge for kafka.available.request.size (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:12,828] INFO Created Gauge for kafka.response.queue.size (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:12,828] INFO Created Counter for kafka.logs.flush.count (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:12,828] INFO Created Gauge for kafka.logs.flush.time.50p (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:12,828] INFO Created Gauge for kafka.logs.flush.time.99p (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:12,829] INFO Created Gauge for kafka.logs.flush.time.max (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:12,829] INFO Created Gauge for kafka.log.end.offset (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:12,834] INFO Created Gauge for kafka.log.size (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:12,835] INFO Created Gauge for kafka.broker.active.count (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:12,835] INFO Created Gauge for kafka.broker.fenced.count (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:12,835] INFO Created Gauge for kafka.topic.count (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:12,836] INFO Created Gauge for kafka.partition.total.count (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:12,836] INFO Created Gauge for kafka.partition.offline.count (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:12,867] INFO [raft-expiration-reaper]: Starting (kafka.raft.TimingWheelExpirationService$ExpiredOperationReaper)
[2025-08-08 16:34:12,948] INFO [RaftManager id=1] Reading KRaft snapshot and log as part of the initialization (org.apache.kafka.raft.KafkaRaftClient)
[2025-08-08 16:34:13,126] INFO [RaftManager id=1] Starting request manager with static voters: [localhost:9093 (id: 1 rack: null)] (org.apache.kafka.raft.KafkaRaftClient)
[2025-08-08 16:34:13,334] INFO [RaftManager id=1] Completed transition to ResignedState(localId=1, epoch=7, voters=[1], electionTimeoutMs=1370, unackedVoters=[], preferredSuccessors=[]) from null (org.apache.kafka.raft.QuorumState)
[2025-08-08 16:34:13,354] INFO [RaftManager id=1] Completed transition to CandidateState(localId=1, localDirectoryId=Rdn9axOmYnzds1YFEWqlbw,epoch=8, retries=1, voteStates={1=org.apache.kafka.raft.CandidateState$VoterState@2fd39436}, highWatermark=Optional.empty, electionTimeoutMs=1104) from ResignedState(localId=1, epoch=7, voters=[1], electionTimeoutMs=1370, unackedVoters=[], preferredSuccessors=[]) (org.apache.kafka.raft.QuorumState)
[2025-08-08 16:34:13,376] INFO [RaftManager id=1] Completed transition to Leader(localReplicaKey=ReplicaKey(id=1, directoryId=Optional[Rdn9axOmYnzds1YFEWqlbw]), epoch=8, epochStartOffset=10123, highWatermark=Optional.empty, voterStates={1=ReplicaState(replicaKey=ReplicaKey(id=1, directoryId=Optional.empty), endOffset=Optional.empty, lastFetchTimestamp=-1, lastCaughtUpTimestamp=-1, hasAcknowledgedLeader=true)}) from CandidateState(localId=1, localDirectoryId=Rdn9axOmYnzds1YFEWqlbw,epoch=8, retries=1, voteStates={1=org.apache.kafka.raft.CandidateState$VoterState@2fd39436}, highWatermark=Optional.empty, electionTimeoutMs=1104) (org.apache.kafka.raft.QuorumState)
[2025-08-08 16:34:13,409] INFO [kafka-1-raft-io-thread]: Starting (org.apache.kafka.raft.KafkaRaftClientDriver)
[2025-08-08 16:34:13,409] INFO [kafka-1-raft-outbound-request-thread]: Starting (org.apache.kafka.raft.KafkaNetworkChannel$SendThread)
[2025-08-08 16:34:13,471] INFO [RaftManager id=1] High watermark set to LogOffsetMetadata(offset=10124, metadata=Optional[(segmentBaseOffset=0,relativePositionInSegment=705597)]) for the first time for epoch 8 based on indexOfHw 0 and voters [ReplicaState(replicaKey=ReplicaKey(id=1, directoryId=Optional.empty), endOffset=Optional[LogOffsetMetadata(offset=10124, metadata=Optional[(segmentBaseOffset=0,relativePositionInSegment=705597)])], lastFetchTimestamp=-1, lastCaughtUpTimestamp=-1, hasAcknowledgedLeader=true)] (org.apache.kafka.raft.LeaderState)
[2025-08-08 16:34:13,504] INFO [MetadataLoader id=1] initializeNewPublishers: The loader is still catching up because we have loaded up to offset -1, but the high water mark is 10124 (org.apache.kafka.image.loader.MetadataLoader)
[2025-08-08 16:34:13,514] INFO [ControllerServer id=1] Waiting for controller quorum voters future (kafka.server.ControllerServer)
[2025-08-08 16:34:13,514] INFO [ControllerServer id=1] Finished waiting for controller quorum voters future (kafka.server.ControllerServer)
[2025-08-08 16:34:13,520] INFO [RaftManager id=1] Registered the listener org.apache.kafka.image.loader.MetadataLoader@1710365213 (org.apache.kafka.raft.KafkaRaftClient)
[2025-08-08 16:34:13,521] INFO [RaftManager id=1] Setting the next offset of org.apache.kafka.image.loader.MetadataLoader@1710365213 to 0 since there are no snapshots (org.apache.kafka.raft.KafkaRaftClient)
[2025-08-08 16:34:13,533] INFO [MetadataLoader id=1] maybePublishMetadata(LOG_DELTA): The loader is still catching up because we have loaded up to offset 0, but the high water mark is 10124 (org.apache.kafka.image.loader.MetadataLoader)
[2025-08-08 16:34:13,805] INFO [MetadataLoader id=1] maybePublishMetadata(LOG_DELTA): The loader finished catching up to the current high water mark of 10124 (org.apache.kafka.image.loader.MetadataLoader)
[2025-08-08 16:34:13,848] INFO [RaftManager id=1] Registered the listener org.apache.kafka.controller.QuorumController$QuorumMetaLogListener@1340036248 (org.apache.kafka.raft.KafkaRaftClient)
[2025-08-08 16:34:13,849] INFO [RaftManager id=1] Setting the next offset of org.apache.kafka.controller.QuorumController$QuorumMetaLogListener@1340036248 to 0 since there are no snapshots (org.apache.kafka.raft.KafkaRaftClient)
[2025-08-08 16:34:13,889] INFO [controller-1-ThrottledChannelReaper-Fetch]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2025-08-08 16:34:13,892] INFO [controller-1-ThrottledChannelReaper-Produce]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2025-08-08 16:34:13,898] INFO [controller-1-ThrottledChannelReaper-Request]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2025-08-08 16:34:13,910] INFO [controller-1-ThrottledChannelReaper-Request]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2025-08-08 16:34:13,919] INFO [controller-1-ThrottledChannelReaper-ControllerMutation]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2025-08-08 16:34:13,973] INFO [MetadataLoader id=1] InitializeNewPublishers: initializing SnapshotGenerator with a snapshot at offset 10123 (org.apache.kafka.image.loader.MetadataLoader)
[2025-08-08 16:34:13,977] INFO [ExpirationReaper-1-AlterAcls]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2025-08-08 16:34:14,053] INFO [RaftManager id=1] Registered the listener kafka.autobalancer.AutoBalancerListener@1268905154 (org.apache.kafka.raft.KafkaRaftClient)
[2025-08-08 16:34:14,054] INFO [RaftManager id=1] Setting the next offset of kafka.autobalancer.AutoBalancerListener@1268905154 to 0 since there are no snapshots (org.apache.kafka.raft.KafkaRaftClient)
[2025-08-08 16:34:14,133] INFO [ControllerServer id=1] Waiting for the controller metadata publishers to be installed (kafka.server.ControllerServer)
[2025-08-08 16:34:14,133] INFO [ControllerServer id=1] Finished waiting for the controller metadata publishers to be installed (kafka.server.ControllerServer)
[2025-08-08 16:34:14,134] INFO [SocketServer listenerType=CONTROLLER, nodeId=1] Enabling request processing. (kafka.network.SocketServer)
[2025-08-08 16:34:14,146] INFO Awaiting socket connections on 0.0.0.0:9093. (kafka.network.DataPlaneAcceptor)
[2025-08-08 16:34:14,165] INFO [MetadataLoader id=1] InitializeNewPublishers: initializing KRaftMetadataCachePublisher with a snapshot at offset 10123 (org.apache.kafka.image.loader.MetadataLoader)
[2025-08-08 16:34:14,166] INFO [MetadataLoader id=1] InitializeNewPublishers: initializing FeaturesPublisher with a snapshot at offset 10123 (org.apache.kafka.image.loader.MetadataLoader)
[2025-08-08 16:34:14,171] INFO [ControllerServer id=1] Loaded new metadata Features(metadataVersion=3.8-IV0, finalizedFeatures={automq.version=3, metadata.version=20}, finalizedFeaturesEpoch=10123). (org.apache.kafka.metadata.publisher.FeaturesPublisher)
[2025-08-08 16:34:14,171] INFO [MetadataLoader id=1] InitializeNewPublishers: initializing ControllerRegistrationsPublisher with a snapshot at offset 10123 (org.apache.kafka.image.loader.MetadataLoader)
[2025-08-08 16:34:14,171] INFO [MetadataLoader id=1] InitializeNewPublishers: initializing ControllerRegistrationManager with a snapshot at offset 10123 (org.apache.kafka.image.loader.MetadataLoader)
[2025-08-08 16:34:14,175] INFO [MetadataLoader id=1] InitializeNewPublishers: initializing DynamicConfigPublisher controller id=1 with a snapshot at offset 10123 (org.apache.kafka.image.loader.MetadataLoader)
[2025-08-08 16:34:14,176] INFO [ControllerRegistrationManager id=1 incarnation=7oFBsgyQRz2rTgEPwotnzg] Found registration for VScpyHmMQXmAD17Vqk4oHA instead of our incarnation. (kafka.server.ControllerRegistrationManager)
[2025-08-08 16:34:14,178] INFO [MetadataLoader id=1] InitializeNewPublishers: initializing DynamicClientQuotaPublisher controller id=1 with a snapshot at offset 10123 (org.apache.kafka.image.loader.MetadataLoader)
[2025-08-08 16:34:14,187] INFO [MetadataLoader id=1] InitializeNewPublishers: initializing ScramPublisher controller id=1 with a snapshot at offset 10123 (org.apache.kafka.image.loader.MetadataLoader)
[2025-08-08 16:34:14,195] INFO [controller-1-to-controller-registration-channel-manager]: Starting (kafka.server.NodeToControllerRequestThread)
[2025-08-08 16:34:14,195] INFO [ControllerServer id=1] Waiting for all of the authorizer futures to be completed (kafka.server.ControllerServer)
[2025-08-08 16:34:14,195] INFO [ControllerServer id=1] Finished waiting for all of the authorizer futures to be completed (kafka.server.ControllerServer)
[2025-08-08 16:34:14,195] INFO [ControllerServer id=1] Waiting for all of the SocketServer Acceptors to be started (kafka.server.ControllerServer)
[2025-08-08 16:34:14,195] INFO [ControllerServer id=1] Finished waiting for all of the SocketServer Acceptors to be started (kafka.server.ControllerServer)
[2025-08-08 16:34:14,196] INFO [MetadataLoader id=1] InitializeNewPublishers: initializing DelegationTokenPublisher controller id=1 with a snapshot at offset 10123 (org.apache.kafka.image.loader.MetadataLoader)
[2025-08-08 16:34:14,196] INFO [ControllerRegistrationManager id=1 incarnation=7oFBsgyQRz2rTgEPwotnzg] initialized channel manager. (kafka.server.ControllerRegistrationManager)
[2025-08-08 16:34:14,199] INFO [controller-1-to-controller-registration-channel-manager]: Recorded new KRaft controller, from now on will use node localhost:9093 (id: 1 rack: null) (kafka.server.NodeToControllerRequestThread)
[2025-08-08 16:34:14,199] INFO [BrokerServer id=1] Transition from SHUTDOWN to STARTING (kafka.server.BrokerServer)
[2025-08-08 16:34:14,207] INFO [BrokerServer id=1] Starting broker (kafka.server.BrokerServer)
[2025-08-08 16:34:14,207] INFO [MetadataLoader id=1] InitializeNewPublishers: initializing ControllerMetadataMetricsPublisher with a snapshot at offset 10123 (org.apache.kafka.image.loader.MetadataLoader)
[2025-08-08 16:34:14,210] INFO [ControllerRegistrationManager id=1 incarnation=7oFBsgyQRz2rTgEPwotnzg] sendControllerRegistration: attempting to send ControllerRegistrationRequestData(controllerId=1, incarnationId=7oFBsgyQRz2rTgEPwotnzg, zkMigrationReady=false, listeners=[Listener(name='CONTROLLER', host='localhost', port=9093, securityProtocol=0)], features=[Feature(name='automq.version', minSupportedVersion=1, maxSupportedVersion=3), Feature(name='metadata.version', minSupportedVersion=1, maxSupportedVersion=20)]) (kafka.server.ControllerRegistrationManager)
[2025-08-08 16:34:14,215] INFO [MetadataLoader id=1] InitializeNewPublishers: initializing AclPublisher controller id=1 with a snapshot at offset 10123 (org.apache.kafka.image.loader.MetadataLoader)
[2025-08-08 16:34:14,235] INFO [broker-1-ThrottledChannelReaper-Fetch]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2025-08-08 16:34:14,242] INFO [broker-1-ThrottledChannelReaper-Produce]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2025-08-08 16:34:14,244] INFO [broker-1-ThrottledChannelReaper-Request]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2025-08-08 16:34:14,244] INFO [broker-1-ThrottledChannelReaper-Request]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2025-08-08 16:34:14,245] INFO [broker-1-ThrottledChannelReaper-ControllerMutation]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2025-08-08 16:34:14,332] WARN Error while loading kafka-version.properties: inStream parameter is null (org.apache.kafka.common.utils.AppInfoParser)
[2025-08-08 16:34:14,349] INFO [BrokerServer id=1] Waiting for controller quorum voters future (kafka.server.BrokerServer)
[2025-08-08 16:34:14,349] INFO [BrokerServer id=1] Finished waiting for controller quorum voters future (kafka.server.BrokerServer)
[2025-08-08 16:34:14,362] INFO [broker-1-to-controller-forwarding-channel-manager]: Starting (kafka.server.NodeToControllerRequestThread)
[2025-08-08 16:34:14,362] INFO [broker-1-to-controller-forwarding-channel-manager]: Recorded new KRaft controller, from now on will use node localhost:9093 (id: 1 rack: null) (kafka.server.NodeToControllerRequestThread)
[2025-08-08 16:34:14,405] INFO [client-metrics-reaper]: Starting (org.apache.kafka.server.util.timer.SystemTimerReaper$Reaper)
[2025-08-08 16:34:14,480] INFO Updated connection-accept-rate max connection creation rate to 2147483647 (kafka.network.ConnectionQuotas)
[2025-08-08 16:34:14,503] INFO [SocketServer listenerType=BROKER, nodeId=1] Created data-plane acceptor and processors for endpoint : ListenerName(PLAINTEXT) (kafka.network.SocketServer)
[2025-08-08 16:34:14,520] INFO [broker-1-to-controller-alter-partition-channel-manager]: Starting (kafka.server.NodeToControllerRequestThread)
[2025-08-08 16:34:14,522] INFO [broker-1-to-controller-alter-partition-channel-manager]: Recorded new KRaft controller, from now on will use node localhost:9093 (id: 1 rack: null) (kafka.server.NodeToControllerRequestThread)
[2025-08-08 16:34:14,535] INFO initializing Kafka metrics collector (org.apache.kafka.common.telemetry.internals.KafkaMetricsCollector)
[2025-08-08 16:34:14,564] INFO [broker-1-to-controller-directory-assignments-channel-manager]: Starting (kafka.server.NodeToControllerRequestThread)
[2025-08-08 16:34:14,564] INFO [broker-1-to-controller-directory-assignments-channel-manager]: Recorded new KRaft controller, from now on will use node localhost:9093 (id: 1 rack: null) (kafka.server.NodeToControllerRequestThread)
[2025-08-08 16:34:14,612] INFO [ExpirationReaper-1-Produce]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2025-08-08 16:34:14,613] INFO [ExpirationReaper-1-Fetch]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2025-08-08 16:34:14,615] INFO [ExpirationReaper-1-DeleteRecords]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2025-08-08 16:34:14,616] INFO [ExpirationReaper-1-ElectLeader]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2025-08-08 16:34:14,618] INFO [ExpirationReaper-1-RemoteFetch]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2025-08-08 16:34:14,689] INFO Kafka version: unknown (org.apache.kafka.common.utils.AppInfoParser)
[2025-08-08 16:34:14,689] INFO Kafka commitId: unknown (org.apache.kafka.common.utils.AppInfoParser)
[2025-08-08 16:34:14,690] INFO Kafka startTimeMs: 1754642054685 (org.apache.kafka.common.utils.AppInfoParser)
[2025-08-08 16:34:14,701] INFO [ControllerRegistrationManager id=1 incarnation=7oFBsgyQRz2rTgEPwotnzg] Our registration has been persisted to the metadata log. (kafka.server.ControllerRegistrationManager)
[2025-08-08 16:34:14,705] INFO [ControllerRegistrationManager id=1 incarnation=7oFBsgyQRz2rTgEPwotnzg] RegistrationResponseHandler: controller acknowledged ControllerRegistrationRequest. (kafka.server.ControllerRegistrationManager)
[2025-08-08 16:34:14,749] INFO [ExpirationReaper-1-Heartbeat]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2025-08-08 16:34:14,749] INFO [ExpirationReaper-1-Rebalance]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2025-08-08 16:34:14,850] INFO [broker-1-to-controller-heartbeat-channel-manager]: Starting (kafka.server.NodeToControllerRequestThread)
[2025-08-08 16:34:14,850] INFO [broker-1-to-controller-heartbeat-channel-manager]: Recorded new KRaft controller, from now on will use node localhost:9093 (id: 1 rack: null) (kafka.server.NodeToControllerRequestThread)
[2025-08-08 16:34:14,857] INFO [BrokerLifecycleManager id=1] Incarnation AGOi_NfVS6evjaKFVEAZ0w of broker 1 in cluster z18IbZOMQmiiP7KGqqRwrg is now STARTING. (kafka.server.BrokerLifecycleManager)
[2025-08-08 16:34:14,881] INFO [BrokerLifecycleManager id=1] Successfully registered broker 1 with broker epoch 10125 (kafka.server.BrokerLifecycleManager)
[2025-08-08 16:34:14,886] INFO [ExpirationReaper-1-AlterAcls]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2025-08-08 16:34:14,901] INFO [BrokerLifecycleManager id=1] The broker has caught up. Transitioning from STARTING to RECOVERY. (kafka.server.BrokerLifecycleManager)
[2025-08-08 16:34:14,923] INFO [BrokerLifecycleManager id=1] The broker is in RECOVERY. (kafka.server.BrokerLifecycleManager)
[2025-08-08 16:34:14,929] INFO initializing Kafka metrics collector (org.apache.kafka.common.telemetry.internals.KafkaMetricsCollector)
[2025-08-08 16:34:15,002] INFO Kafka version: unknown (org.apache.kafka.common.utils.AppInfoParser)
[2025-08-08 16:34:15,003] INFO Kafka commitId: unknown (org.apache.kafka.common.utils.AppInfoParser)
[2025-08-08 16:34:15,003] INFO Kafka startTimeMs: 1754642055002 (org.apache.kafka.common.utils.AppInfoParser)
[2025-08-08 16:34:15,029] INFO [BrokerServer id=1] Waiting for the broker metadata publishers to be installed (kafka.server.BrokerServer)
[2025-08-08 16:34:15,029] INFO [BrokerServer id=1] Finished waiting for the broker metadata publishers to be installed (kafka.server.BrokerServer)
[2025-08-08 16:34:15,029] INFO [BrokerServer id=1] Waiting for the controller to acknowledge that we are caught up (kafka.server.BrokerServer)
[2025-08-08 16:34:15,029] INFO [BrokerServer id=1] Finished waiting for the controller to acknowledge that we are caught up (kafka.server.BrokerServer)
[2025-08-08 16:34:15,031] INFO [BrokerServer id=1] Waiting for the initial broker metadata update to be published (kafka.server.BrokerServer)
[2025-08-08 16:34:15,053] INFO [MetadataLoader id=1] InitializeNewPublishers: initializing MetadataVersionPublisher(id=1) with a snapshot at offset 10126 (org.apache.kafka.image.loader.MetadataLoader)
[2025-08-08 16:34:15,054] INFO [MetadataLoader id=1] InitializeNewPublishers: initializing BrokerMetadataPublisher with a snapshot at offset 10126 (org.apache.kafka.image.loader.MetadataLoader)
[2025-08-08 16:34:15,055] INFO [BrokerMetadataPublisher id=1] Publishing initial metadata at offset OffsetAndEpoch(offset=10126, epoch=8) with metadata.version 3.8-IV0. (kafka.server.metadata.BrokerMetadataPublisher)
[2025-08-08 16:34:15,253] INFO [AddPartitionsToTxnSenderThread-1]: Starting (kafka.server.AddPartitionsToTxnManager)
[2025-08-08 16:34:15,253] INFO [LogDirFailureHandler]: Starting (kafka.server.streamaspect.ElasticReplicaManager$ElasticLogDirFailureHandler)
[2025-08-08 16:34:15,254] INFO [GroupCoordinator 1]: Starting up. (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:15,257] INFO [GroupCoordinator 1]: Startup complete. (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:15,258] INFO [TransactionCoordinator id=1] Starting up. (kafka.coordinator.transaction.TransactionCoordinator)
[2025-08-08 16:34:15,259] INFO [TxnMarkerSenderThread-1]: Starting (kafka.coordinator.transaction.TransactionMarkerChannelManager)
[2025-08-08 16:34:15,260] INFO [TransactionCoordinator id=1] Startup complete. (kafka.coordinator.transaction.TransactionCoordinator)
[2025-08-08 16:34:15,295] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-5) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:15,295] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-13) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:15,295] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-30) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:15,295] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-46) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:15,295] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-24) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:15,295] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-41) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:15,295] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-20) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:15,295] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-21) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:15,295] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-25) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:15,295] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-8) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:15,295] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-17) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:15,295] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-12) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:15,295] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-45) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:15,295] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-26) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:15,295] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-34) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:15,295] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-16) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:15,295] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-49) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:15,295] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-38) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:15,295] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-42) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:15,295] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-9) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:15,295] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-1) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:15,297] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-4) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:15,295] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-37) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:15,295] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-29) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:15,295] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-0) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:15,297] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-33) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:15,298] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-15) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:15,300] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-48) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:15,300] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-11) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:15,300] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-44) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:15,301] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-23) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:15,302] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-19) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:15,303] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-32) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:15,305] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-28) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:15,305] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-7) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:15,307] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-47) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:15,307] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-40) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:15,307] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-3) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:15,308] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(quickstart-events-0) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:15,307] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-36) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:15,308] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-14) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:15,309] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__auto_balancer_metrics-0) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:15,309] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-43) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:15,309] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-31) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:15,310] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-10) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:15,310] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-22) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:15,310] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-18) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:15,310] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-27) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:15,310] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-39) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:15,311] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-35) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:15,311] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-6) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:15,311] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-2) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:15,339] INFO [DynamicConfigPublisher broker id=1] Updating topic __consumer_offsets with new configuration : compression.type -> producer,cleanup.policy -> compact,min.insync.replicas -> 1,segment.bytes -> 104857600 (kafka.server.metadata.DynamicConfigPublisher)
[2025-08-08 16:34:15,354] INFO [DynamicConfigPublisher broker id=1] Updating topic __auto_balancer_metrics with new configuration : cleanup.policy -> delete,min.insync.replicas -> 1,retention.ms -> 1800000 (kafka.server.metadata.DynamicConfigPublisher)
[2025-08-08 16:34:15,355] INFO [DynamicConfigPublisher broker id=1] Updating topic quickstart-events with new configuration : min.insync.replicas -> 1 (kafka.server.metadata.DynamicConfigPublisher)
[2025-08-08 16:34:15,359] INFO [BrokerServer id=1] Finished waiting for the initial broker metadata update to be published (kafka.server.BrokerServer)
[2025-08-08 16:34:15,359] INFO [MetadataLoader id=1] InitializeNewPublishers: initializing BrokerRegistrationTracker(id=1) with a snapshot at offset 10126 (org.apache.kafka.image.loader.MetadataLoader)
[2025-08-08 16:34:15,361] INFO KafkaConfig values: 
	advertised.listeners = PLAINTEXT://localhost:9092,CONTROLLER://localhost:9093
	alter.config.policy.class.name = null
	alter.log.dirs.replication.quota.window.num = 11
	alter.log.dirs.replication.quota.window.size.seconds = 1
	authorizer.class.name = 
	auto.create.topics.enable = true
	auto.include.jmx.reporter = true
	auto.leader.rebalance.enable = true
	autobalancer.controller.anomaly.detect.interval.ms = 60000
	autobalancer.controller.consumer.client.id = auto_balancer_controller_consumer_
	autobalancer.controller.consumer.poll.timeout = 1000
	autobalancer.controller.enable = true
	autobalancer.controller.exclude.broker.ids = []
	autobalancer.controller.exclude.topics = []
	autobalancer.controller.execution.concurrency = 50
	autobalancer.controller.execution.interval.ms = 5000
	autobalancer.controller.goals = [kafka.autobalancer.goals.NetworkInUsageDistributionGoal, kafka.autobalancer.goals.NetworkOutUsageDistributionGoal]
	autobalancer.controller.metrics.delay.ms = 60000
	autobalancer.controller.network.in.distribution.detect.avg.deviation = 0.1
	autobalancer.controller.network.in.trivial.change.ratio = 0.05
	autobalancer.controller.network.in.usage.distribution.detect.threshold = 1048576
	autobalancer.controller.network.out.distribution.detect.avg.deviation = 0.1
	autobalancer.controller.network.out.trivial.change.ratio = 0.05
	autobalancer.controller.network.out.usage.distribution.detect.threshold = 1048576
	autobalancer.controller.retry.backoff.ms = 1000
	autobalancer.controller.topic.num.partitions = 1
	autobalancer.controller.topic.retention.ms = 1800000
	autobalancer.reporter.batch.size = 800000
	autobalancer.reporter.client.id = auto_balancer_metrics_reporter_producer
	autobalancer.reporter.linger.ms = 1000
	autobalancer.reporter.metrics.reporting.interval.ms = 10000
	autobalancer.reporter.producer.create.retries = 2
	automq.backpressure.cooldown.ms = 15000
	automq.backpressure.enabled = true
	automq.table.topic.namespace = null
	automq.table.topic.schema.registry.url = null
	automq.zonerouter.channels = null
	background.threads = 10
	broker.heartbeat.interval.ms = 2000
	broker.id = 1
	broker.id.generation.enable = true
	broker.rack = null
	broker.session.timeout.ms = 9000
	client.quota.callback.class = null
	compression.gzip.level = -1
	compression.lz4.level = 9
	compression.type = producer
	compression.zstd.level = 3
	connection.failed.authentication.delay.ms = 100
	connections.max.idle.ms = 600000
	connections.max.reauth.ms = 0
	control.plane.listener.name = null
	controlled.shutdown.enable = true
	controlled.shutdown.max.retries = 3
	controlled.shutdown.retry.backoff.ms = 5000
	controller.listener.names = CONTROLLER
	controller.quorum.append.linger.ms = 1
	controller.quorum.bootstrap.servers = []
	controller.quorum.election.backoff.max.ms = 1000
	controller.quorum.election.timeout.ms = 1000
	controller.quorum.fetch.timeout.ms = 5000
	controller.quorum.request.timeout.ms = 5000
	controller.quorum.retry.backoff.ms = 20
	controller.quorum.voters = [1@localhost:9093]
	controller.quota.window.num = 11
	controller.quota.window.size.seconds = 1
	controller.socket.timeout.ms = 30000
	create.topic.policy.class.name = null
	default.replication.factor = 1
	delegation.token.expiry.check.interval.ms = 3600000
	delegation.token.expiry.time.ms = 86400000
	delegation.token.master.key = null
	delegation.token.max.lifetime.ms = 604800000
	delegation.token.secret.key = null
	delete.records.purgatory.purge.interval.requests = 1
	delete.topic.enable = true
	early.start.listeners = null
	elasticstream.enable = true
	elasticstream.endpoint = s3://
	eligible.leader.replicas.enable = false
	fetch.max.bytes = 57671680
	fetch.purgatory.purge.interval.requests = 1000
	group.consumer.assignors = [org.apache.kafka.coordinator.group.assignor.UniformAssignor, org.apache.kafka.coordinator.group.assignor.RangeAssignor]
	group.consumer.heartbeat.interval.ms = 5000
	group.consumer.max.heartbeat.interval.ms = 15000
	group.consumer.max.session.timeout.ms = 60000
	group.consumer.max.size = 2147483647
	group.consumer.migration.policy = disabled
	group.consumer.min.heartbeat.interval.ms = 5000
	group.consumer.min.session.timeout.ms = 45000
	group.consumer.session.timeout.ms = 45000
	group.coordinator.append.linger.ms = 10
	group.coordinator.new.enable = false
	group.coordinator.rebalance.protocols = [classic]
	group.coordinator.threads = 1
	group.initial.rebalance.delay.ms = 3000
	group.max.session.timeout.ms = 1800000
	group.max.size = 2147483647
	group.min.session.timeout.ms = 6000
	group.share.delivery.count.limit = 5
	group.share.enable = false
	group.share.heartbeat.interval.ms = 5000
	group.share.max.groups = 10
	group.share.max.heartbeat.interval.ms = 15000
	group.share.max.record.lock.duration.ms = 60000
	group.share.max.session.timeout.ms = 60000
	group.share.max.size = 200
	group.share.min.heartbeat.interval.ms = 5000
	group.share.min.record.lock.duration.ms = 15000
	group.share.min.session.timeout.ms = 45000
	group.share.partition.max.record.locks = 200
	group.share.record.lock.duration.ms = 30000
	group.share.session.timeout.ms = 45000
	initial.broker.registration.timeout.ms = 60000
	inter.broker.listener.name = PLAINTEXT
	inter.broker.protocol.version = 3.8-IV0
	kafka.metrics.polling.interval.secs = 10
	kafka.metrics.reporters = []
	leader.imbalance.check.interval.seconds = 300
	leader.imbalance.per.broker.percentage = 10
	listener.security.protocol.map = CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL
	listeners = PLAINTEXT://:9092,CONTROLLER://:9093
	log.cleaner.backoff.ms = 15000
	log.cleaner.dedupe.buffer.size = 134217728
	log.cleaner.delete.retention.ms = 86400000
	log.cleaner.enable = true
	log.cleaner.io.buffer.load.factor = 0.9
	log.cleaner.io.buffer.size = 524288
	log.cleaner.io.max.bytes.per.second = 1.7976931348623157E308
	log.cleaner.max.compaction.lag.ms = 9223372036854775807
	log.cleaner.min.cleanable.ratio = 0.5
	log.cleaner.min.compaction.lag.ms = 0
	log.cleaner.threads = 1
	log.cleanup.policy = [delete]
	log.dir = /tmp/kafka-logs
	log.dir.failure.timeout.ms = 30000
	log.dirs = D:/workspace_java/nicolchen/automq/kraft-combined-logs-idc-a
	log.flush.interval.messages = 9223372036854775807
	log.flush.interval.ms = null
	log.flush.offset.checkpoint.interval.ms = 60000
	log.flush.scheduler.interval.ms = 9223372036854775807
	log.flush.start.offset.checkpoint.interval.ms = 60000
	log.index.interval.bytes = 1048576
	log.index.size.max.bytes = 10485760
	log.initial.task.delay.ms = 30000
	log.local.retention.bytes = -2
	log.local.retention.ms = -2
	log.message.downconversion.enable = true
	log.message.format.version = 3.0-IV1
	log.message.timestamp.after.max.ms = 9223372036854775807
	log.message.timestamp.before.max.ms = 9223372036854775807
	log.message.timestamp.difference.max.ms = 9223372036854775807
	log.message.timestamp.type = CreateTime
	log.preallocate = false
	log.retention.bytes = -1
	log.retention.check.interval.ms = 300000
	log.retention.hours = 168
	log.retention.minutes = null
	log.retention.ms = null
	log.roll.hours = 168
	log.roll.jitter.hours = 0
	log.roll.jitter.ms = null
	log.roll.ms = null
	log.segment.bytes = 1073741824
	log.segment.delete.delay.ms = 60000
	max.connection.creation.rate = 2147483647
	max.connections = 2147483647
	max.connections.per.ip = 2147483647
	max.connections.per.ip.overrides = 
	max.incremental.fetch.session.cache.slots = 1000
	max.request.partition.size.limit = 2000
	message.max.bytes = 1048588
	metadata.log.dir = null
	metadata.log.max.record.bytes.between.snapshots = 20971520
	metadata.log.max.snapshot.interval.ms = 3600000
	metadata.log.segment.bytes = 1073741824
	metadata.log.segment.min.bytes = 8388608
	metadata.log.segment.ms = 604800000
	metadata.max.idle.interval.ms = 500
	metadata.max.retention.bytes = 104857600
	metadata.max.retention.ms = 604800000
	metric.reporters = [kafka.autobalancer.metricsreporter.AutoBalancerMetricsReporter]
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	min.insync.replicas = 1
	node.id = 1
	num.io.threads = 8
	num.network.threads = 3
	num.partitions = 1
	num.recovery.threads.per.data.dir = 1
	num.replica.alter.log.dirs.threads = null
	num.replica.fetchers = 1
	offset.metadata.max.bytes = 4096
	offsets.commit.required.acks = -1
	offsets.commit.timeout.ms = 5000
	offsets.load.buffer.size = 5242880
	offsets.retention.check.interval.ms = 600000
	offsets.retention.minutes = 10080
	offsets.topic.compression.codec = 0
	offsets.topic.num.partitions = 50
	offsets.topic.replication.factor = 1
	offsets.topic.segment.bytes = 104857600
	password.encoder.cipher.algorithm = AES/CBC/PKCS5Padding
	password.encoder.iterations = 4096
	password.encoder.key.length = 128
	password.encoder.keyfactory.algorithm = null
	password.encoder.old.secret = null
	password.encoder.secret = null
	principal.builder.class = class org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder
	process.roles = [broker, controller]
	producer.id.expiration.check.interval.ms = 600000
	producer.id.expiration.ms = 86400000
	producer.purgatory.purge.interval.requests = 1000
	queued.max.request.bytes = -1
	queued.max.requests = 500
	queued.max.requests.size.bytes = 104857600
	quota.window.num = 11
	quota.window.size.seconds = 1
	remote.fetch.max.wait.ms = 500
	remote.log.index.file.cache.total.size.bytes = 1073741824
	remote.log.manager.copier.thread.pool.size = 10
	remote.log.manager.copy.max.bytes.per.second = 9223372036854775807
	remote.log.manager.copy.quota.window.num = 11
	remote.log.manager.copy.quota.window.size.seconds = 1
	remote.log.manager.expiration.thread.pool.size = 10
	remote.log.manager.fetch.max.bytes.per.second = 9223372036854775807
	remote.log.manager.fetch.quota.window.num = 11
	remote.log.manager.fetch.quota.window.size.seconds = 1
	remote.log.manager.task.interval.ms = 30000
	remote.log.manager.task.retry.backoff.max.ms = 30000
	remote.log.manager.task.retry.backoff.ms = 500
	remote.log.manager.task.retry.jitter = 0.2
	remote.log.manager.thread.pool.size = 10
	remote.log.metadata.custom.metadata.max.bytes = 128
	remote.log.metadata.manager.class.name = org.apache.kafka.server.log.remote.metadata.storage.TopicBasedRemoteLogMetadataManager
	remote.log.metadata.manager.class.path = null
	remote.log.metadata.manager.impl.prefix = rlmm.config.
	remote.log.metadata.manager.listener.name = null
	remote.log.reader.max.pending.tasks = 100
	remote.log.reader.threads = 10
	remote.log.storage.manager.class.name = null
	remote.log.storage.manager.class.path = null
	remote.log.storage.manager.impl.prefix = rsm.config.
	remote.log.storage.system.enable = false
	replica.fetch.backoff.ms = 1000
	replica.fetch.max.bytes = 1048576
	replica.fetch.min.bytes = 1
	replica.fetch.response.max.bytes = 10485760
	replica.fetch.wait.max.ms = 500
	replica.high.watermark.checkpoint.interval.ms = 5000
	replica.lag.time.max.ms = 30000
	replica.selector.class = null
	replica.socket.receive.buffer.bytes = 65536
	replica.socket.timeout.ms = 30000
	replication.quota.window.num = 11
	replication.quota.window.size.seconds = 1
	request.timeout.ms = 30000
	reserved.broker.max.id = 1000
	s3.block.cache.size = -1
	s3.bucket = null
	s3.controller.request.retry.base.delay.ms = 500
	s3.controller.request.retry.max.count = 2147483647
	s3.data.buckets = 0@s3://automq-data?region=us-east-1&endpoint=http://10.65.80.149:9004,1@s3://automq-data?region=us-east-1&endpoint=http://10.65.80.149:9002,2@s3://automq-data?region=us-east-1&endpoint=http://10.65.80.149:9000
	s3.endpoint = null
	s3.max.stream.num.per.stream.set.object = 20000
	s3.max.stream.object.num.per.commit = 10000
	s3.metrics.exporter.prom.host = localhost
	s3.metrics.exporter.prom.port = 9090
	s3.mock.enable = false
	s3.network.baseline.bandwidth = 104857600
	s3.network.refill.period.ms = 10
	s3.object.block.size = 524288
	s3.object.delete.retention.minutes = 1
	s3.object.part.size = 16777216
	s3.ops.bucket = null
	s3.ops.buckets = 0@s3://automq-ops?region=us-east-1&endpoint=http://10.65.80.149:9004,1@s3://automq-ops?region=us-east-1&endpoint=http://10.65.80.149:9002,2@s3://automq-ops?region=us-east-1&endpoint=http://10.65.80.149:9000
	s3.path.style = false
	s3.region = null
	s3.stream.allocator.policy = POOLED_HEAP
	s3.stream.object.compaction.interval.minutes = 30
	s3.stream.object.compaction.max.size.bytes = 10737418240
	s3.stream.object.split.size = 8388608
	s3.stream.set.object.compaction.cache.size = 209715200
	s3.stream.set.object.compaction.force.split.minutes = 120
	s3.stream.set.object.compaction.interval.minutes = 10
	s3.stream.set.object.compaction.max.num = 500
	s3.stream.set.object.compaction.stream.split.size = 8388608
	s3.telemetry.exporter.otlp.compression.enable = false
	s3.telemetry.exporter.otlp.endpoint = null
	s3.telemetry.exporter.otlp.protocol = grpc
	s3.telemetry.exporter.report.interval.ms = 30000
	s3.telemetry.metrics.base.labels = null
	s3.telemetry.metrics.enable = true
	s3.telemetry.metrics.exporter.type = null
	s3.telemetry.metrics.exporter.uri = null
	s3.telemetry.metrics.level = INFO
	s3.telemetry.ops.enabled = true
	s3.wal.cache.size = -1
	s3.wal.capacity = 2147483648
	s3.wal.iops = 3000
	s3.wal.path = 0@s3://automq-wal?region=us-east-1&endpoint=http://10.65.80.149:9004,1@s3://automq-wal?region=us-east-1&endpoint=http://10.65.80.149:9002,2@s3://automq-wal?region=us-east-1&endpoint=http://10.65.80.149:9000
	s3.wal.thread = 8
	s3.wal.upload.interval.ms = -1
	s3.wal.upload.threshold = 524288
	sasl.client.callback.handler.class = null
	sasl.enabled.mechanisms = [GSSAPI]
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.principal.to.local.rules = [DEFAULT]
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism.controller.protocol = GSSAPI
	sasl.mechanism.inter.broker.protocol = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	sasl.server.callback.handler.class = null
	sasl.server.max.receive.size = 524288
	security.inter.broker.protocol = PLAINTEXT
	security.providers = null
	server.max.startup.time.ms = 9223372036854775807
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	socket.listen.backlog.size = 50
	socket.receive.buffer.bytes = 102400
	socket.request.max.bytes = 104857600
	socket.send.buffer.bytes = 102400
	ssl.allow.dn.changes = false
	ssl.allow.san.changes = false
	ssl.cipher.suites = []
	ssl.client.auth = none
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.principal.mapping.rules = DEFAULT
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	telemetry.max.bytes = 1048576
	transaction.abort.timed.out.transaction.cleanup.interval.ms = 10000
	transaction.max.timeout.ms = 900000
	transaction.partition.verification.enable = true
	transaction.remove.expired.transaction.cleanup.interval.ms = 3600000
	transaction.state.log.load.buffer.size = 5242880
	transaction.state.log.min.isr = 1
	transaction.state.log.num.partitions = 50
	transaction.state.log.replication.factor = 1
	transaction.state.log.segment.bytes = 104857600
	transactional.id.expiration.ms = 604800000
	unclean.leader.election.enable = false
	unstable.api.versions.enable = false
	unstable.feature.versions.enable = false
	zookeeper.clientCnxnSocket = null
	zookeeper.connect = null
	zookeeper.connection.timeout.ms = null
	zookeeper.max.in.flight.requests = 10
	zookeeper.metadata.migration.enable = false
	zookeeper.metadata.migration.min.batch.size = 200
	zookeeper.session.timeout.ms = 18000
	zookeeper.set.acl = false
	zookeeper.ssl.cipher.suites = null
	zookeeper.ssl.client.enable = false
	zookeeper.ssl.crl.enable = false
	zookeeper.ssl.enabled.protocols = null
	zookeeper.ssl.endpoint.identification.algorithm = HTTPS
	zookeeper.ssl.keystore.location = null
	zookeeper.ssl.keystore.password = null
	zookeeper.ssl.keystore.type = null
	zookeeper.ssl.ocsp.enable = false
	zookeeper.ssl.protocol = TLSv1.2
	zookeeper.ssl.truststore.location = null
	zookeeper.ssl.truststore.password = null
	zookeeper.ssl.truststore.type = null
 (kafka.server.KafkaConfig)
[2025-08-08 16:34:15,387] INFO s3.wal.cache.size is not set, using 178956970 as the default value (kafka.server.KafkaConfig)
[2025-08-08 16:34:15,406] INFO s3.block.cache.size is not set, using 89478485 as the default value (kafka.server.KafkaConfig)
[2025-08-08 16:34:15,666] INFO [broker-1-to-controller-s3stream-to-controller-channel-manager]: Starting (kafka.server.NodeToControllerRequestThread)
[2025-08-08 16:34:15,666] INFO [broker-1-to-controller-s3stream-to-controller-channel-manager]: Recorded new KRaft controller, from now on will use node localhost:9093 (id: 1 rack: null) (kafka.server.NodeToControllerRequestThread)
[2025-08-08 16:34:15,685] INFO [MetadataLoader id=1] InitializeNewPublishers: initializing StreamMetadataManager with a snapshot at offset 10127 (org.apache.kafka.image.loader.MetadataLoader)
[2025-08-08 16:34:15,760] INFO Start readiness check for BucketURL{bucketId=0, protocol='s3', bucket='automq-data', region='us-east-1', endpoint='http://10.65.80.149:9004', extension={} (ObjectStorageReadinessCheck)
[2025-08-08 16:34:16,929] INFO [BrokerLifecycleManager id=1] The broker is in RECOVERY. (kafka.server.BrokerLifecycleManager)
[2025-08-08 16:34:18,922] INFO Readiness check pass! (ObjectStorageReadinessCheck)
[2025-08-08 16:34:18,923] INFO Start readiness check for BucketURL{bucketId=1, protocol='s3', bucket='automq-data', region='us-east-1', endpoint='http://10.65.80.149:9002', extension={} (ObjectStorageReadinessCheck)
[2025-08-08 16:34:18,935] INFO [BrokerLifecycleManager id=1] The broker is in RECOVERY. (kafka.server.BrokerLifecycleManager)
[2025-08-08 16:34:19,071] INFO Readiness check pass! (ObjectStorageReadinessCheck)
[2025-08-08 16:34:20,814] INFO [BrokerServer id=1] Waiting for the broker to be unfenced (kafka.server.BrokerServer)
[2025-08-08 16:34:20,903] INFO [BrokerLifecycleManager id=1] The broker has been unfenced. Transitioning from RECOVERY to RUNNING. (kafka.server.BrokerLifecycleManager)
[2025-08-08 16:34:20,903] INFO [BrokerServer id=1] Finished waiting for the broker to be unfenced (kafka.server.BrokerServer)
[2025-08-08 16:34:20,905] INFO authorizerStart completed for endpoint PLAINTEXT. Endpoint is now READY. (org.apache.kafka.server.network.EndpointReadyFutures)
[2025-08-08 16:34:20,905] INFO [SocketServer listenerType=BROKER, nodeId=1] Enabling request processing. (kafka.network.SocketServer)
[2025-08-08 16:34:20,907] INFO Awaiting socket connections on 0.0.0.0:9092. (kafka.network.DataPlaneAcceptor)
[2025-08-08 16:34:20,917] INFO [BrokerServer id=1] Waiting for all of the authorizer futures to be completed (kafka.server.BrokerServer)
[2025-08-08 16:34:20,918] INFO [BrokerServer id=1] Finished waiting for all of the authorizer futures to be completed (kafka.server.BrokerServer)
[2025-08-08 16:34:20,918] INFO [BrokerServer id=1] Waiting for all of the SocketServer Acceptors to be started (kafka.server.BrokerServer)
[2025-08-08 16:34:20,918] INFO [BrokerServer id=1] Finished waiting for all of the SocketServer Acceptors to be started (kafka.server.BrokerServer)
[2025-08-08 16:34:20,918] INFO [BrokerServer id=1] Transition from STARTING to STARTED (kafka.server.BrokerServer)
[2025-08-08 16:34:20,918] INFO Kafka version: unknown (org.apache.kafka.common.utils.AppInfoParser)
[2025-08-08 16:34:20,918] INFO Kafka commitId: unknown (org.apache.kafka.common.utils.AppInfoParser)
[2025-08-08 16:34:20,918] INFO Kafka startTimeMs: 1754642060918 (org.apache.kafka.common.utils.AppInfoParser)
[2025-08-08 16:34:20,920] INFO [KafkaRaftServer nodeId=1] Kafka Server started (kafka.server.KafkaRaftServer)
[2025-08-08 16:34:20,921] INFO [MetadataLoader id=1] InitializeNewPublishers: initializing failover-listener with a snapshot at offset 10300 (org.apache.kafka.image.loader.MetadataLoader)
[2025-08-08 16:34:22,497] INFO [ProducerStateManager partition=__auto_balancer_metrics-0] Loading producer state from snapshot file 'SnapshotFile(offset=697, file=697.snapshot)' (org.apache.kafka.storage.internals.log.ProducerStateManager)
[2025-08-08 16:34:22,909] INFO [ElasticLogLoader partition=__consumer_offsets-39]  [UNCLEAN_SHUTDOWN] recover range [0, 0) (org.apache.kafka.storage.internals.log.LogSegment)
[2025-08-08 16:34:22,910] INFO [ElasticLogLoader partition=__consumer_offsets-2]  [UNCLEAN_SHUTDOWN] recover range [0, 0) (org.apache.kafka.storage.internals.log.LogSegment)
[2025-08-08 16:34:22,911] INFO [ElasticLogLoader partition=__consumer_offsets-0]  [UNCLEAN_SHUTDOWN] recover range [0, 0) (org.apache.kafka.storage.internals.log.LogSegment)
[2025-08-08 16:34:22,912] INFO [ElasticLogLoader partition=__consumer_offsets-9]  [UNCLEAN_SHUTDOWN] recover range [0, 0) (org.apache.kafka.storage.internals.log.LogSegment)
[2025-08-08 16:34:22,912] INFO [ElasticLogLoader partition=__consumer_offsets-25]  [UNCLEAN_SHUTDOWN] recover range [0, 0) (org.apache.kafka.storage.internals.log.LogSegment)
[2025-08-08 16:34:22,912] INFO [ElasticLogLoader partition=__consumer_offsets-42]  [UNCLEAN_SHUTDOWN] recover range [0, 0) (org.apache.kafka.storage.internals.log.LogSegment)
[2025-08-08 16:34:22,912] INFO [ElasticLogLoader partition=__consumer_offsets-4]  [UNCLEAN_SHUTDOWN] recover range [0, 0) (org.apache.kafka.storage.internals.log.LogSegment)
[2025-08-08 16:34:22,912] INFO [ElasticLogLoader partition=__consumer_offsets-11]  [UNCLEAN_SHUTDOWN] recover range [0, 0) (org.apache.kafka.storage.internals.log.LogSegment)
[2025-08-08 16:34:22,913] INFO [ElasticLogLoader partition=__consumer_offsets-21]  [UNCLEAN_SHUTDOWN] recover range [0, 0) (org.apache.kafka.storage.internals.log.LogSegment)
[2025-08-08 16:34:22,913] INFO [ElasticLogLoader partition=__consumer_offsets-36]  [UNCLEAN_SHUTDOWN] recover range [0, 0) (org.apache.kafka.storage.internals.log.LogSegment)
[2025-08-08 16:34:22,913] INFO [ElasticLogLoader partition=__consumer_offsets-28]  [UNCLEAN_SHUTDOWN] recover range [0, 0) (org.apache.kafka.storage.internals.log.LogSegment)
[2025-08-08 16:34:22,913] INFO [ElasticLogLoader partition=__consumer_offsets-27]  [UNCLEAN_SHUTDOWN] recover range [0, 0) (org.apache.kafka.storage.internals.log.LogSegment)
[2025-08-08 16:34:22,914] INFO [ElasticLogLoader partition=__consumer_offsets-17]  [UNCLEAN_SHUTDOWN] recover range [0, 0) (org.apache.kafka.storage.internals.log.LogSegment)
[2025-08-08 16:34:22,915] INFO [ElasticLogLoader partition=__consumer_offsets-32]  [UNCLEAN_SHUTDOWN] recover range [0, 0) (org.apache.kafka.storage.internals.log.LogSegment)
[2025-08-08 16:34:22,915] INFO [ElasticLogLoader partition=__consumer_offsets-46]  [UNCLEAN_SHUTDOWN] recover range [0, 0) (org.apache.kafka.storage.internals.log.LogSegment)
[2025-08-08 16:34:22,917] INFO [ElasticLogLoader partition=__consumer_offsets-41]  [UNCLEAN_SHUTDOWN] recover range [0, 0) (org.apache.kafka.storage.internals.log.LogSegment)
[2025-08-08 16:34:22,917] INFO [ElasticLogLoader partition=__consumer_offsets-10]  [UNCLEAN_SHUTDOWN] recover range [0, 0) (org.apache.kafka.storage.internals.log.LogSegment)
[2025-08-08 16:34:22,917] INFO [ElasticLogLoader partition=__consumer_offsets-49]  [UNCLEAN_SHUTDOWN] recover range [0, 1) (org.apache.kafka.storage.internals.log.LogSegment)
[2025-08-08 16:34:22,917] INFO [ElasticLogLoader partition=__consumer_offsets-24]  [UNCLEAN_SHUTDOWN] recover range [0, 0) (org.apache.kafka.storage.internals.log.LogSegment)
[2025-08-08 16:34:22,917] INFO [ElasticLogLoader partition=__consumer_offsets-12]  [UNCLEAN_SHUTDOWN] recover range [0, 0) (org.apache.kafka.storage.internals.log.LogSegment)
[2025-08-08 16:34:22,917] INFO [ElasticLogLoader partition=__consumer_offsets-1]  [UNCLEAN_SHUTDOWN] recover range [0, 0) (org.apache.kafka.storage.internals.log.LogSegment)
[2025-08-08 16:34:22,917] INFO [ElasticLogLoader partition=__consumer_offsets-19]  [UNCLEAN_SHUTDOWN] recover range [0, 0) (org.apache.kafka.storage.internals.log.LogSegment)
[2025-08-08 16:34:22,917] INFO [ElasticLogLoader partition=__consumer_offsets-35]  [UNCLEAN_SHUTDOWN] recover range [0, 0) (org.apache.kafka.storage.internals.log.LogSegment)
[2025-08-08 16:34:22,919] INFO [ElasticLogLoader partition=__consumer_offsets-16]  [UNCLEAN_SHUTDOWN] recover range [0, 0) (org.apache.kafka.storage.internals.log.LogSegment)
[2025-08-08 16:34:22,919] INFO [ElasticLogLoader partition=__consumer_offsets-34]  [UNCLEAN_SHUTDOWN] recover range [0, 0) (org.apache.kafka.storage.internals.log.LogSegment)
[2025-08-08 16:34:22,920] INFO [ElasticLogLoader partition=__consumer_offsets-23]  [UNCLEAN_SHUTDOWN] recover range [0, 0) (org.apache.kafka.storage.internals.log.LogSegment)
[2025-08-08 16:34:22,920] INFO [ElasticLogLoader partition=__consumer_offsets-40]  [UNCLEAN_SHUTDOWN] recover range [0, 0) (org.apache.kafka.storage.internals.log.LogSegment)
[2025-08-08 16:34:22,920] INFO [ElasticLogLoader partition=__consumer_offsets-33]  [UNCLEAN_SHUTDOWN] recover range [0, 0) (org.apache.kafka.storage.internals.log.LogSegment)
[2025-08-08 16:34:22,920] INFO [ElasticLogLoader partition=__consumer_offsets-43]  [UNCLEAN_SHUTDOWN] recover range [0, 0) (org.apache.kafka.storage.internals.log.LogSegment)
[2025-08-08 16:34:22,920] INFO [ElasticLogLoader partition=__consumer_offsets-20]  [UNCLEAN_SHUTDOWN] recover range [0, 0) (org.apache.kafka.storage.internals.log.LogSegment)
[2025-08-08 16:34:22,921] INFO [ElasticLogLoader partition=__consumer_offsets-31]  [UNCLEAN_SHUTDOWN] recover range [0, 0) (org.apache.kafka.storage.internals.log.LogSegment)
[2025-08-08 16:34:22,921] INFO [ElasticLogLoader partition=__consumer_offsets-15]  [UNCLEAN_SHUTDOWN] recover range [0, 0) (org.apache.kafka.storage.internals.log.LogSegment)
[2025-08-08 16:34:22,921] INFO [ElasticLogLoader partition=__consumer_offsets-14]  [UNCLEAN_SHUTDOWN] recover range [0, 0) (org.apache.kafka.storage.internals.log.LogSegment)
[2025-08-08 16:34:22,921] INFO [ElasticLogLoader partition=__consumer_offsets-18]  [UNCLEAN_SHUTDOWN] recover range [0, 0) (org.apache.kafka.storage.internals.log.LogSegment)
[2025-08-08 16:34:22,922] INFO [ElasticLogLoader partition=__consumer_offsets-6]  [UNCLEAN_SHUTDOWN] recover range [0, 0) (org.apache.kafka.storage.internals.log.LogSegment)
[2025-08-08 16:34:22,922] INFO [ElasticLogLoader partition=__consumer_offsets-5]  [UNCLEAN_SHUTDOWN] recover range [0, 0) (org.apache.kafka.storage.internals.log.LogSegment)
[2025-08-08 16:34:22,922] INFO [ElasticLogLoader partition=__consumer_offsets-7]  [UNCLEAN_SHUTDOWN] recover range [0, 0) (org.apache.kafka.storage.internals.log.LogSegment)
[2025-08-08 16:34:22,922] INFO [ElasticLogLoader partition=__consumer_offsets-26]  [UNCLEAN_SHUTDOWN] recover range [0, 0) (org.apache.kafka.storage.internals.log.LogSegment)
[2025-08-08 16:34:22,923] INFO [ElasticLogLoader partition=__consumer_offsets-38]  [UNCLEAN_SHUTDOWN] recover range [0, 0) (org.apache.kafka.storage.internals.log.LogSegment)
[2025-08-08 16:34:22,923] INFO [ElasticLogLoader partition=__consumer_offsets-3]  [UNCLEAN_SHUTDOWN] recover range [0, 0) (org.apache.kafka.storage.internals.log.LogSegment)
[2025-08-08 16:34:22,923] INFO [ElasticLogLoader partition=__consumer_offsets-30]  [UNCLEAN_SHUTDOWN] recover range [0, 0) (org.apache.kafka.storage.internals.log.LogSegment)
[2025-08-08 16:34:22,924] INFO [ElasticLogLoader partition=__consumer_offsets-45]  [UNCLEAN_SHUTDOWN] recover range [0, 0) (org.apache.kafka.storage.internals.log.LogSegment)
[2025-08-08 16:34:22,925] INFO [ElasticLogLoader partition=__consumer_offsets-47]  [UNCLEAN_SHUTDOWN] recover range [0, 0) (org.apache.kafka.storage.internals.log.LogSegment)
[2025-08-08 16:34:22,925] INFO [ElasticLogLoader partition=__consumer_offsets-29]  [UNCLEAN_SHUTDOWN] recover range [0, 0) (org.apache.kafka.storage.internals.log.LogSegment)
[2025-08-08 16:34:22,926] INFO [ElasticLogLoader partition=__consumer_offsets-37]  [UNCLEAN_SHUTDOWN] recover range [0, 0) (org.apache.kafka.storage.internals.log.LogSegment)
[2025-08-08 16:34:22,926] INFO [ElasticLogLoader partition=__consumer_offsets-44]  [UNCLEAN_SHUTDOWN] recover range [0, 0) (org.apache.kafka.storage.internals.log.LogSegment)
[2025-08-08 16:34:22,971] INFO [ElasticLogLoader partition=__auto_balancer_metrics-0]  [UNCLEAN_SHUTDOWN] recover range [697, 3770) (org.apache.kafka.storage.internals.log.LogSegment)
[2025-08-08 16:34:22,971] INFO [ElasticLogLoader partition=__consumer_offsets-13]  [UNCLEAN_SHUTDOWN] recover range [0, 2) (org.apache.kafka.storage.internals.log.LogSegment)
[2025-08-08 16:34:22,971] INFO [ElasticLogLoader partition=__consumer_offsets-48]  [UNCLEAN_SHUTDOWN] recover range [0, 5) (org.apache.kafka.storage.internals.log.LogSegment)
[2025-08-08 16:34:22,971] INFO [ElasticLogLoader partition=__consumer_offsets-8]  [UNCLEAN_SHUTDOWN] recover range [0, 13) (org.apache.kafka.storage.internals.log.LogSegment)
[2025-08-08 16:34:22,971] INFO [ElasticLogLoader partition=__consumer_offsets-22]  [UNCLEAN_SHUTDOWN] recover range [0, 5) (org.apache.kafka.storage.internals.log.LogSegment)
[2025-08-08 16:34:22,971] INFO [ElasticLogLoader partition=quickstart-events-0]  [UNCLEAN_SHUTDOWN] recover range [0, 18) (org.apache.kafka.storage.internals.log.LogSegment)
[2025-08-08 16:34:23,065] INFO [Partition __consumer_offsets-17 broker=1] Log loaded for partition __consumer_offsets-17 with initial high watermark 0 (kafka.cluster.Partition)
[2025-08-08 16:34:23,065] INFO [Partition __consumer_offsets-47 broker=1] Log loaded for partition __consumer_offsets-47 with initial high watermark 0 (kafka.cluster.Partition)
[2025-08-08 16:34:23,065] INFO [Partition __consumer_offsets-15 broker=1] Log loaded for partition __consumer_offsets-15 with initial high watermark 0 (kafka.cluster.Partition)
[2025-08-08 16:34:23,066] INFO [Partition __consumer_offsets-1 broker=1] Log loaded for partition __consumer_offsets-1 with initial high watermark 0 (kafka.cluster.Partition)
[2025-08-08 16:34:23,065] INFO [Partition __consumer_offsets-0 broker=1] Log loaded for partition __consumer_offsets-0 with initial high watermark 0 (kafka.cluster.Partition)
[2025-08-08 16:34:23,066] INFO [Partition __consumer_offsets-24 broker=1] Log loaded for partition __consumer_offsets-24 with initial high watermark 0 (kafka.cluster.Partition)
[2025-08-08 16:34:23,066] INFO [Partition __consumer_offsets-38 broker=1] Log loaded for partition __consumer_offsets-38 with initial high watermark 0 (kafka.cluster.Partition)
[2025-08-08 16:34:23,066] INFO [Partition __consumer_offsets-10 broker=1] Log loaded for partition __consumer_offsets-10 with initial high watermark 0 (kafka.cluster.Partition)
[2025-08-08 16:34:23,066] INFO [Partition __consumer_offsets-26 broker=1] Log loaded for partition __consumer_offsets-26 with initial high watermark 0 (kafka.cluster.Partition)
[2025-08-08 16:34:23,066] INFO [Partition __consumer_offsets-23 broker=1] Log loaded for partition __consumer_offsets-23 with initial high watermark 0 (kafka.cluster.Partition)
[2025-08-08 16:34:23,066] INFO [Partition __consumer_offsets-31 broker=1] Log loaded for partition __consumer_offsets-31 with initial high watermark 0 (kafka.cluster.Partition)
[2025-08-08 16:34:23,066] INFO [Partition __consumer_offsets-12 broker=1] Log loaded for partition __consumer_offsets-12 with initial high watermark 0 (kafka.cluster.Partition)
[2025-08-08 16:34:23,066] INFO [Partition __consumer_offsets-39 broker=1] Log loaded for partition __consumer_offsets-39 with initial high watermark 0 (kafka.cluster.Partition)
[2025-08-08 16:34:23,066] INFO [Partition __consumer_offsets-20 broker=1] Log loaded for partition __consumer_offsets-20 with initial high watermark 0 (kafka.cluster.Partition)
[2025-08-08 16:34:23,067] INFO [Partition __consumer_offsets-27 broker=1] Log loaded for partition __consumer_offsets-27 with initial high watermark 0 (kafka.cluster.Partition)
[2025-08-08 16:34:23,066] INFO [Partition __consumer_offsets-7 broker=1] Log loaded for partition __consumer_offsets-7 with initial high watermark 0 (kafka.cluster.Partition)
[2025-08-08 16:34:23,067] INFO [Partition __consumer_offsets-6 broker=1] Log loaded for partition __consumer_offsets-6 with initial high watermark 0 (kafka.cluster.Partition)
[2025-08-08 16:34:23,067] INFO [Partition __consumer_offsets-40 broker=1] Log loaded for partition __consumer_offsets-40 with initial high watermark 0 (kafka.cluster.Partition)
[2025-08-08 16:34:23,067] INFO [Partition __consumer_offsets-5 broker=1] Log loaded for partition __consumer_offsets-5 with initial high watermark 0 (kafka.cluster.Partition)
[2025-08-08 16:34:23,067] INFO [Partition __consumer_offsets-36 broker=1] Log loaded for partition __consumer_offsets-36 with initial high watermark 0 (kafka.cluster.Partition)
[2025-08-08 16:34:23,067] INFO [Partition __consumer_offsets-19 broker=1] Log loaded for partition __consumer_offsets-19 with initial high watermark 0 (kafka.cluster.Partition)
[2025-08-08 16:34:23,067] INFO [Partition __consumer_offsets-43 broker=1] Log loaded for partition __consumer_offsets-43 with initial high watermark 0 (kafka.cluster.Partition)
[2025-08-08 16:34:23,067] INFO [Partition __consumer_offsets-30 broker=1] Log loaded for partition __consumer_offsets-30 with initial high watermark 0 (kafka.cluster.Partition)
[2025-08-08 16:34:23,067] INFO [Partition __consumer_offsets-2 broker=1] Log loaded for partition __consumer_offsets-2 with initial high watermark 0 (kafka.cluster.Partition)
[2025-08-08 16:34:23,068] INFO [Partition __consumer_offsets-42 broker=1] Log loaded for partition __consumer_offsets-42 with initial high watermark 0 (kafka.cluster.Partition)
[2025-08-08 16:34:23,067] INFO [Partition __consumer_offsets-35 broker=1] Log loaded for partition __consumer_offsets-35 with initial high watermark 0 (kafka.cluster.Partition)
[2025-08-08 16:34:23,067] INFO [Partition __consumer_offsets-33 broker=1] Log loaded for partition __consumer_offsets-33 with initial high watermark 0 (kafka.cluster.Partition)
[2025-08-08 16:34:23,066] INFO [Partition __consumer_offsets-32 broker=1] Log loaded for partition __consumer_offsets-32 with initial high watermark 0 (kafka.cluster.Partition)
[2025-08-08 16:34:23,066] INFO [Partition __consumer_offsets-9 broker=1] Log loaded for partition __consumer_offsets-9 with initial high watermark 0 (kafka.cluster.Partition)
[2025-08-08 16:34:23,066] INFO [Partition __consumer_offsets-41 broker=1] Log loaded for partition __consumer_offsets-41 with initial high watermark 0 (kafka.cluster.Partition)
[2025-08-08 16:34:23,066] INFO [Partition __consumer_offsets-14 broker=1] Log loaded for partition __consumer_offsets-14 with initial high watermark 0 (kafka.cluster.Partition)
[2025-08-08 16:34:23,066] INFO [Partition __consumer_offsets-29 broker=1] Log loaded for partition __consumer_offsets-29 with initial high watermark 0 (kafka.cluster.Partition)
[2025-08-08 16:34:23,066] INFO [Partition __consumer_offsets-37 broker=1] Log loaded for partition __consumer_offsets-37 with initial high watermark 0 (kafka.cluster.Partition)
[2025-08-08 16:34:23,066] INFO [Partition __consumer_offsets-11 broker=1] Log loaded for partition __consumer_offsets-11 with initial high watermark 0 (kafka.cluster.Partition)
[2025-08-08 16:34:23,066] INFO [Partition __consumer_offsets-28 broker=1] Log loaded for partition __consumer_offsets-28 with initial high watermark 0 (kafka.cluster.Partition)
[2025-08-08 16:34:23,066] INFO [Partition __consumer_offsets-25 broker=1] Log loaded for partition __consumer_offsets-25 with initial high watermark 0 (kafka.cluster.Partition)
[2025-08-08 16:34:23,068] INFO [Partition __consumer_offsets-45 broker=1] Log loaded for partition __consumer_offsets-45 with initial high watermark 0 (kafka.cluster.Partition)
[2025-08-08 16:34:23,068] INFO [Partition __consumer_offsets-34 broker=1] Log loaded for partition __consumer_offsets-34 with initial high watermark 0 (kafka.cluster.Partition)
[2025-08-08 16:34:23,068] INFO [Partition __consumer_offsets-16 broker=1] Log loaded for partition __consumer_offsets-16 with initial high watermark 0 (kafka.cluster.Partition)
[2025-08-08 16:34:23,068] INFO [Partition __consumer_offsets-3 broker=1] Log loaded for partition __consumer_offsets-3 with initial high watermark 0 (kafka.cluster.Partition)
[2025-08-08 16:34:23,068] INFO [Partition __consumer_offsets-44 broker=1] Log loaded for partition __consumer_offsets-44 with initial high watermark 0 (kafka.cluster.Partition)
[2025-08-08 16:34:23,067] INFO [Partition __consumer_offsets-4 broker=1] Log loaded for partition __consumer_offsets-4 with initial high watermark 0 (kafka.cluster.Partition)
[2025-08-08 16:34:23,067] INFO [Partition __consumer_offsets-21 broker=1] Log loaded for partition __consumer_offsets-21 with initial high watermark 0 (kafka.cluster.Partition)
[2025-08-08 16:34:23,067] INFO [Partition __consumer_offsets-46 broker=1] Log loaded for partition __consumer_offsets-46 with initial high watermark 0 (kafka.cluster.Partition)
[2025-08-08 16:34:23,067] INFO [Partition __consumer_offsets-18 broker=1] Log loaded for partition __consumer_offsets-18 with initial high watermark 0 (kafka.cluster.Partition)
[2025-08-08 16:34:23,155] INFO [Partition __consumer_offsets-48 broker=1] Log loaded for partition __consumer_offsets-48 with initial high watermark 5 (kafka.cluster.Partition)
[2025-08-08 16:34:23,155] INFO [Partition __consumer_offsets-49 broker=1] Log loaded for partition __consumer_offsets-49 with initial high watermark 1 (kafka.cluster.Partition)
[2025-08-08 16:34:23,155] INFO [Partition __consumer_offsets-8 broker=1] Log loaded for partition __consumer_offsets-8 with initial high watermark 13 (kafka.cluster.Partition)
[2025-08-08 16:34:23,155] INFO [Partition __consumer_offsets-13 broker=1] Log loaded for partition __consumer_offsets-13 with initial high watermark 2 (kafka.cluster.Partition)
[2025-08-08 16:34:23,155] INFO [Partition __consumer_offsets-22 broker=1] Log loaded for partition __consumer_offsets-22 with initial high watermark 5 (kafka.cluster.Partition)
[2025-08-08 16:34:23,157] INFO [Partition __auto_balancer_metrics-0 broker=1] Log loaded for partition __auto_balancer_metrics-0 with initial high watermark 3770 (kafka.cluster.Partition)
[2025-08-08 16:34:23,157] INFO [Partition quickstart-events-0 broker=1] Log loaded for partition quickstart-events-0 with initial high watermark 18 (kafka.cluster.Partition)
[2025-08-08 16:34:23,483] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(quickstart-events-0) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:23,507] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__auto_balancer_metrics-0) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:23,516] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 10 in epoch OptionalInt[3] (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,516] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 34 in epoch OptionalInt[3] (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,516] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 5 in epoch OptionalInt[3] (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,516] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 31 in epoch OptionalInt[3] (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,516] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 9 in epoch OptionalInt[3] (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,516] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 4 in epoch OptionalInt[3] (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,516] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 8 in epoch OptionalInt[3] (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,517] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 2 in epoch OptionalInt[3] (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,517] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 33 in epoch OptionalInt[3] (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,517] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 46 in epoch OptionalInt[3] (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,517] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 25 in epoch OptionalInt[3] (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,517] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 24 in epoch OptionalInt[3] (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,517] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 43 in epoch OptionalInt[3] (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,516] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 29 in epoch OptionalInt[3] (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,517] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 20 in epoch OptionalInt[3] (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,516] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 11 in epoch OptionalInt[3] (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,517] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 3 in epoch OptionalInt[3] (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,517] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 41 in epoch OptionalInt[3] (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,517] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 32 in epoch OptionalInt[3] (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,517] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 26 in epoch OptionalInt[3] (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,517] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 0 in epoch OptionalInt[3] (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,517] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 40 in epoch OptionalInt[3] (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,517] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 22 in epoch OptionalInt[3] (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,517] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 36 in epoch OptionalInt[3] (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,517] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 23 in epoch OptionalInt[3] (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,517] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 49 in epoch OptionalInt[3] (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,517] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 13 in epoch OptionalInt[3] (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,517] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 28 in epoch OptionalInt[3] (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,517] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 35 in epoch OptionalInt[3] (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,517] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 39 in epoch OptionalInt[3] (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,517] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 14 in epoch OptionalInt[3] (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,517] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 42 in epoch OptionalInt[3] (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,517] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 30 in epoch OptionalInt[3] (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,517] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 21 in epoch OptionalInt[3] (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,517] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 19 in epoch OptionalInt[3] (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,517] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 12 in epoch OptionalInt[3] (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,517] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 17 in epoch OptionalInt[3] (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,517] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 16 in epoch OptionalInt[3] (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,517] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 7 in epoch OptionalInt[3] (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,517] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 48 in epoch OptionalInt[3] (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,517] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 44 in epoch OptionalInt[3] (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,517] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 45 in epoch OptionalInt[3] (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,517] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 6 in epoch OptionalInt[3] (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,517] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 18 in epoch OptionalInt[3] (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,517] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 1 in epoch OptionalInt[3] (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,517] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 15 in epoch OptionalInt[3] (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,516] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 47 in epoch OptionalInt[3] (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,516] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 38 in epoch OptionalInt[3] (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,516] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 27 in epoch OptionalInt[3] (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,516] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 37 in epoch OptionalInt[3] (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,526] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-4 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,526] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-29 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,526] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-31 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,526] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-9 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,526] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-8 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,527] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-46 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,527] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-20 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,527] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-10 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,527] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-38 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,527] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-33 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,527] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-27 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,527] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-41 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,526] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-2 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,527] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-32 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,527] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-3 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,527] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-26 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,527] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-34 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,527] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-5 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,527] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-43 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,528] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-36 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,527] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-11 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,527] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-24 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,527] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-37 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,527] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-25 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,528] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-23 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,528] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-22 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,528] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-40 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,527] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-0 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,528] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-28 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,528] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-13 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,528] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-49 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,528] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-35 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,528] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-14 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,528] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-42 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,529] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-39 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,529] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-30 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,529] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-21 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,530] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-19 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,530] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-12 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,530] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-17 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,530] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-16 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,530] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-7 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,530] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-48 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,530] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-44 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,530] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-45 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,530] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-6 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,530] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-18 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,530] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-1 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,530] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-15 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,531] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-47 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,534] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-10) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:23,539] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-0) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:23,539] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-38) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:23,539] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-10 for coordinator epoch OptionalInt[3]. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,539] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-35) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:23,540] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-38 for coordinator epoch OptionalInt[3]. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,540] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-42) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:23,540] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-33 for coordinator epoch OptionalInt[3]. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,540] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-35 for coordinator epoch OptionalInt[3]. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,540] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-49 for coordinator epoch OptionalInt[3]. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,540] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-39 for coordinator epoch OptionalInt[3]. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,541] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-13) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:23,541] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-13 for coordinator epoch OptionalInt[3]. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,541] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-24) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:23,541] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-30 for coordinator epoch OptionalInt[3]. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,541] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-16) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:23,541] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-28 for coordinator epoch OptionalInt[3]. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,541] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-30) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:23,541] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-39) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:23,542] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-28) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:23,542] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-19) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:23,542] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-45) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:23,542] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-21 for coordinator epoch OptionalInt[3]. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,543] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-0 for coordinator epoch OptionalInt[3]. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,543] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-23) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:23,543] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-14 for coordinator epoch OptionalInt[3]. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,543] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-33) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:23,543] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-40 for coordinator epoch OptionalInt[3]. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,543] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-19 for coordinator epoch OptionalInt[3]. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,543] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-25) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:23,543] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-20) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:23,543] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-22 for coordinator epoch OptionalInt[3]. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,544] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-23 for coordinator epoch OptionalInt[3]. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,544] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-25 for coordinator epoch OptionalInt[3]. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,544] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-37 for coordinator epoch OptionalInt[3]. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,544] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-37) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:23,544] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-24 for coordinator epoch OptionalInt[3]. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,544] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-11 for coordinator epoch OptionalInt[3]. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,544] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-40) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:23,545] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-36 for coordinator epoch OptionalInt[3]. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,545] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-7 for coordinator epoch OptionalInt[3]. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,545] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-48 for coordinator epoch OptionalInt[3]. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,545] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-43 for coordinator epoch OptionalInt[3]. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,545] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-20 for coordinator epoch OptionalInt[3]. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,545] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-22) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:23,545] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-46 for coordinator epoch OptionalInt[3]. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,545] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-32) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:23,545] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-44 for coordinator epoch OptionalInt[3]. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,545] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-5 for coordinator epoch OptionalInt[3]. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,545] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-8 for coordinator epoch OptionalInt[3]. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,545] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-6 for coordinator epoch OptionalInt[3]. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,545] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-36) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:23,545] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-1 for coordinator epoch OptionalInt[3]. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,545] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-11) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:23,545] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-18 for coordinator epoch OptionalInt[3]. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,547] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-9 for coordinator epoch OptionalInt[3]. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,547] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-34 for coordinator epoch OptionalInt[3]. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,547] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-31 for coordinator epoch OptionalInt[3]. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,547] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-26 for coordinator epoch OptionalInt[3]. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,547] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-7) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:23,547] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-3 for coordinator epoch OptionalInt[3]. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,547] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-4 for coordinator epoch OptionalInt[3]. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,547] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-29 for coordinator epoch OptionalInt[3]. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,547] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-32 for coordinator epoch OptionalInt[3]. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,547] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-14) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:23,547] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-46) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:23,547] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-2 for coordinator epoch OptionalInt[3]. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,548] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-43) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:23,548] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-48) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:23,548] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-44) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:23,548] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-5) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:23,548] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-41 for coordinator epoch OptionalInt[3]. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,549] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-27 for coordinator epoch OptionalInt[3]. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,549] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-47 for coordinator epoch OptionalInt[3]. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,549] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-15 for coordinator epoch OptionalInt[3]. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,549] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-45 for coordinator epoch OptionalInt[3]. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,549] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-16 for coordinator epoch OptionalInt[3]. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,549] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-17 for coordinator epoch OptionalInt[3]. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,549] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-12 for coordinator epoch OptionalInt[3]. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,549] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-42 for coordinator epoch OptionalInt[3]. Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,549] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-6) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:23,550] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-1) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:23,551] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-47) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:23,551] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-9) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:23,552] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-18) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:23,552] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-34) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:23,553] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-26) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:23,553] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-31) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:23,553] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-3) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:23,553] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-4) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:23,555] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-29) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:23,555] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-49) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:23,555] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-12) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:23,556] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-15) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:23,556] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-8) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:23,556] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-2) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:23,557] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-41) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:23,557] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-21) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:23,557] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-17) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:23,557] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(__consumer_offsets-27) (kafka.server.ReplicaFetcherManager)
[2025-08-08 16:34:23,560] INFO [ReplicaManager broker=1] open 52 / make leader 0 / close 0 partitions cost 8285ms (kafka.server.streamaspect.ElasticReplicaManager)
[2025-08-08 16:34:23,686] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 23 in epoch 4 (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,686] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 24 in epoch 4 (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,686] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 10 in epoch 4 (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,686] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 40 in epoch 4 (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,686] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 43 in epoch 4 (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,686] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 9 in epoch 4 (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,686] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 30 in epoch 4 (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,686] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 37 in epoch 4 (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,687] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 6 in epoch 4 (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,687] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 1 in epoch 4 (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,686] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 27 in epoch 4 (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,686] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 13 in epoch 4 (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,686] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 16 in epoch 4 (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,687] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 39 in epoch 4 (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,686] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 44 in epoch 4 (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,687] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 38 in epoch 4 (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,687] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 28 in epoch 4 (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,687] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 11 in epoch 4 (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,687] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 31 in epoch 4 (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,687] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 3 in epoch 4 (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,687] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 8 in epoch 4 (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,687] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 5 in epoch 4 (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,687] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 35 in epoch 4 (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,687] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 32 in epoch 4 (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,687] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 34 in epoch 4 (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,687] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 42 in epoch 4 (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,687] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 4 in epoch 4 (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,687] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 18 in epoch 4 (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,686] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 0 in epoch 4 (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,686] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 26 in epoch 4 (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,686] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 25 in epoch 4 (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,686] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 22 in epoch 4 (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,686] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 33 in epoch 4 (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,686] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 20 in epoch 4 (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,688] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 17 in epoch 4 (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,688] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 45 in epoch 4 (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,688] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 48 in epoch 4 (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,688] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 21 in epoch 4 (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,688] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 2 in epoch 4 (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,688] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 41 in epoch 4 (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,687] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 14 in epoch 4 (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,687] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 15 in epoch 4 (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,687] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 19 in epoch 4 (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,687] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 12 in epoch 4 (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,687] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 46 in epoch 4 (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,687] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 7 in epoch 4 (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,687] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 36 in epoch 4 (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,687] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 47 in epoch 4 (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,687] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 49 in epoch 4 (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,687] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 29 in epoch 4 (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,697] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-10 for epoch 4 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,697] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-9 for epoch 4 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,697] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-30 for epoch 4 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,697] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-31 for epoch 4 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,697] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-40 for epoch 4 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,697] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-43 for epoch 4 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,698] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-42 for epoch 4 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,697] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-11 for epoch 4 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,698] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-28 for epoch 4 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,698] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-39 for epoch 4 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,698] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-24 for epoch 4 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,698] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-23 for epoch 4 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,698] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-26 for epoch 4 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,698] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-32 for epoch 4 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,698] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-4 for epoch 4 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,698] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-13 for epoch 4 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,699] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-33 for epoch 4 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,698] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-0 for epoch 4 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,697] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-18 for epoch 4 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,697] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-16 for epoch 4 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,697] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-27 for epoch 4 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,697] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-35 for epoch 4 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,697] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-5 for epoch 4 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,697] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-1 for epoch 4 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,697] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-6 for epoch 4 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,697] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-34 for epoch 4 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,697] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-37 for epoch 4 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,700] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-41 for epoch 4 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,697] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-8 for epoch 4 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,697] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-3 for epoch 4 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,700] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-19 for epoch 4 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,700] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-14 for epoch 4 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,700] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-15 for epoch 4 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,700] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-2 for epoch 4 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,699] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-20 for epoch 4 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,700] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-36 for epoch 4 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,700] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-49 for epoch 4 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,699] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-17 for epoch 4 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,699] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-21 for epoch 4 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,699] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-48 for epoch 4 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,699] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-45 for epoch 4 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,698] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-22 for epoch 4 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,698] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-38 for epoch 4 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,698] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-25 for epoch 4 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,700] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-29 for epoch 4 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,700] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-47 for epoch 4 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,700] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-46 for epoch 4 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,700] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-7 for epoch 4 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,700] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-12 for epoch 4 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,701] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-44 for epoch 4 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,719] INFO [ReplicaManager broker=1] open 0 / make leader 52 / close 0 partitions cost 2792ms (kafka.server.streamaspect.ElasticReplicaManager)
[2025-08-08 16:34:23,728] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-25 in 23 milliseconds for epoch 4, of which 15 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,729] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-29 in 28 milliseconds for epoch 4, of which 27 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,729] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-36 in 29 milliseconds for epoch 4, of which 29 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,729] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-9 in 32 milliseconds for epoch 4, of which 32 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,729] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-10 in 32 milliseconds for epoch 4, of which 32 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,730] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-14 in 30 milliseconds for epoch 4, of which 30 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,730] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-30 in 33 milliseconds for epoch 4, of which 33 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,730] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-31 in 33 milliseconds for epoch 4, of which 33 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,730] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-20 in 30 milliseconds for epoch 4, of which 30 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,730] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-40 in 33 milliseconds for epoch 4, of which 33 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,731] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-21 in 31 milliseconds for epoch 4, of which 31 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,811] INFO Loaded member MemberMetadata(memberId=console-consumer-3670389d-7c94-4ce7-a38b-a0bcef58389e, groupInstanceId=None, clientId=console-consumer, clientHost=/127.0.0.1, sessionTimeoutMs=45000, rebalanceTimeoutMs=300000, supportedProtocols=List(range)) in group console-consumer-27657 with generation 1. (kafka.coordinator.group.GroupMetadata$)
[2025-08-08 16:34:23,828] INFO Loaded member MemberMetadata(memberId=console-consumer-3670389d-7c94-4ce7-a38b-a0bcef58389e, groupInstanceId=None, clientId=console-consumer, clientHost=/127.0.0.1, sessionTimeoutMs=45000, rebalanceTimeoutMs=300000, supportedProtocols=List(range)) in group console-consumer-27657 with generation 2. (kafka.coordinator.group.GroupMetadata$)
[2025-08-08 16:34:23,829] INFO Loaded member MemberMetadata(memberId=console-consumer-3670389d-7c94-4ce7-a38b-a0bcef58389e, groupInstanceId=None, clientId=console-consumer, clientHost=/127.0.0.1, sessionTimeoutMs=45000, rebalanceTimeoutMs=300000, supportedProtocols=List(range)) in group console-consumer-27657 with generation 3. (kafka.coordinator.group.GroupMetadata$)
[2025-08-08 16:34:23,829] INFO Loaded member MemberMetadata(memberId=console-consumer-3670389d-7c94-4ce7-a38b-a0bcef58389e, groupInstanceId=None, clientId=console-consumer, clientHost=/127.0.0.1, sessionTimeoutMs=45000, rebalanceTimeoutMs=300000, supportedProtocols=List(range)) in group console-consumer-27657 with generation 4. (kafka.coordinator.group.GroupMetadata$)
[2025-08-08 16:34:23,837] INFO [GroupCoordinator 1]: Loading group metadata for console-consumer-27657 with generation 5 (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,838] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-48 in 137 milliseconds for epoch 4, of which 30 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,838] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-45 in 137 milliseconds for epoch 4, of which 137 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,851] INFO Loaded member MemberMetadata(memberId=console-consumer-b3d25f8f-5cd0-4108-868b-4d1eb33f1710, groupInstanceId=None, clientId=console-consumer, clientHost=/127.0.0.1, sessionTimeoutMs=45000, rebalanceTimeoutMs=300000, supportedProtocols=List(range)) in group console-consumer-53091 with generation 1. (kafka.coordinator.group.GroupMetadata$)
[2025-08-08 16:34:23,851] INFO [GroupCoordinator 1]: Loading group metadata for console-consumer-53091 with generation 1 (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,872] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-49 in 172 milliseconds for epoch 4, of which 138 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,872] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-11 in 174 milliseconds for epoch 4, of which 174 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,891] INFO Loaded member MemberMetadata(memberId=console-consumer-8937b236-ef02-4c93-86c8-893e1ae5bbdb, groupInstanceId=None, clientId=console-consumer, clientHost=/127.0.0.1, sessionTimeoutMs=45000, rebalanceTimeoutMs=300000, supportedProtocols=List(range)) in group console-consumer-32141 with generation 1. (kafka.coordinator.group.GroupMetadata$)
[2025-08-08 16:34:23,892] INFO Loaded member MemberMetadata(memberId=console-consumer-ebd08cf6-cff9-4532-86ce-d7be83e229d6, groupInstanceId=None, clientId=console-consumer, clientHost=/127.0.0.1, sessionTimeoutMs=45000, rebalanceTimeoutMs=300000, supportedProtocols=List(range)) in group console-consumer-93360 with generation 1. (kafka.coordinator.group.GroupMetadata$)
[2025-08-08 16:34:23,892] INFO [GroupCoordinator 1]: Loading group metadata for console-consumer-93360 with generation 2 (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,892] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-22 in 191 milliseconds for epoch 4, of which 171 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,893] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-28 in 195 milliseconds for epoch 4, of which 195 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,893] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-17 in 193 milliseconds for epoch 4, of which 193 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,893] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-39 in 195 milliseconds for epoch 4, of which 195 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,893] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-24 in 195 milliseconds for epoch 4, of which 195 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,893] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-38 in 192 milliseconds for epoch 4, of which 192 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,893] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-43 in 195 milliseconds for epoch 4, of which 195 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,895] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-42 in 197 milliseconds for epoch 4, of which 195 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,895] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-47 in 194 milliseconds for epoch 4, of which 194 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,895] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-23 in 197 milliseconds for epoch 4, of which 197 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,895] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-26 in 197 milliseconds for epoch 4, of which 197 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,895] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-32 in 197 milliseconds for epoch 4, of which 197 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,895] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-4 in 197 milliseconds for epoch 4, of which 197 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,919] INFO Loaded member MemberMetadata(memberId=console-consumer-32114512-4c1a-4c7d-9562-f268b5904ef4, groupInstanceId=None, clientId=console-consumer, clientHost=/127.0.0.1, sessionTimeoutMs=45000, rebalanceTimeoutMs=300000, supportedProtocols=List(range)) in group console-consumer-90869 with generation 1. (kafka.coordinator.group.GroupMetadata$)
[2025-08-08 16:34:23,920] INFO [GroupCoordinator 1]: Loading group metadata for console-consumer-90869 with generation 2 (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,920] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-13 in 221 milliseconds for epoch 4, of which 196 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,921] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-18 in 222 milliseconds for epoch 4, of which 221 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,921] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-33 in 222 milliseconds for epoch 4, of which 222 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,921] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-0 in 222 milliseconds for epoch 4, of which 222 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,921] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-16 in 222 milliseconds for epoch 4, of which 222 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,921] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-27 in 222 milliseconds for epoch 4, of which 222 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,921] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-35 in 222 milliseconds for epoch 4, of which 222 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,922] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-5 in 223 milliseconds for epoch 4, of which 223 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,922] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-1 in 223 milliseconds for epoch 4, of which 223 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,922] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-15 in 222 milliseconds for epoch 4, of which 222 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,922] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-12 in 221 milliseconds for epoch 4, of which 221 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,922] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-19 in 222 milliseconds for epoch 4, of which 222 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,922] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-34 in 223 milliseconds for epoch 4, of which 223 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,923] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-3 in 223 milliseconds for epoch 4, of which 223 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,923] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-7 in 222 milliseconds for epoch 4, of which 222 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,923] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-37 in 223 milliseconds for epoch 4, of which 223 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,945] INFO Loaded member MemberMetadata(memberId=console-consumer-16714cf7-d00b-4c76-ae5f-724eb1415f4a, groupInstanceId=None, clientId=console-consumer, clientHost=/127.0.0.1, sessionTimeoutMs=45000, rebalanceTimeoutMs=300000, supportedProtocols=List(range)) in group console-consumer-60803 with generation 1. (kafka.coordinator.group.GroupMetadata$)
[2025-08-08 16:34:23,946] INFO Loaded member MemberMetadata(memberId=console-consumer-16714cf7-d00b-4c76-ae5f-724eb1415f4a, groupInstanceId=None, clientId=console-consumer, clientHost=/127.0.0.1, sessionTimeoutMs=45000, rebalanceTimeoutMs=300000, supportedProtocols=List(range)) in group console-consumer-60803 with generation 2. (kafka.coordinator.group.GroupMetadata$)
[2025-08-08 16:34:23,947] INFO Loaded member MemberMetadata(memberId=console-consumer-16714cf7-d00b-4c76-ae5f-724eb1415f4a, groupInstanceId=None, clientId=console-consumer, clientHost=/127.0.0.1, sessionTimeoutMs=45000, rebalanceTimeoutMs=300000, supportedProtocols=List(range)) in group console-consumer-60803 with generation 3. (kafka.coordinator.group.GroupMetadata$)
[2025-08-08 16:34:23,947] INFO Loaded member MemberMetadata(memberId=console-consumer-16714cf7-d00b-4c76-ae5f-724eb1415f4a, groupInstanceId=None, clientId=console-consumer, clientHost=/127.0.0.1, sessionTimeoutMs=45000, rebalanceTimeoutMs=300000, supportedProtocols=List(range)) in group console-consumer-60803 with generation 4. (kafka.coordinator.group.GroupMetadata$)
[2025-08-08 16:34:23,947] INFO Loaded member MemberMetadata(memberId=console-consumer-16714cf7-d00b-4c76-ae5f-724eb1415f4a, groupInstanceId=None, clientId=console-consumer, clientHost=/127.0.0.1, sessionTimeoutMs=45000, rebalanceTimeoutMs=300000, supportedProtocols=List(range)) in group console-consumer-60803 with generation 5. (kafka.coordinator.group.GroupMetadata$)
[2025-08-08 16:34:23,948] INFO Loaded member MemberMetadata(memberId=console-consumer-16714cf7-d00b-4c76-ae5f-724eb1415f4a, groupInstanceId=None, clientId=console-consumer, clientHost=/127.0.0.1, sessionTimeoutMs=45000, rebalanceTimeoutMs=300000, supportedProtocols=List(range)) in group console-consumer-60803 with generation 6. (kafka.coordinator.group.GroupMetadata$)
[2025-08-08 16:34:23,948] INFO Loaded member MemberMetadata(memberId=console-consumer-16714cf7-d00b-4c76-ae5f-724eb1415f4a, groupInstanceId=None, clientId=console-consumer, clientHost=/127.0.0.1, sessionTimeoutMs=45000, rebalanceTimeoutMs=300000, supportedProtocols=List(range)) in group console-consumer-60803 with generation 7. (kafka.coordinator.group.GroupMetadata$)
[2025-08-08 16:34:23,949] INFO Loaded member MemberMetadata(memberId=console-consumer-16714cf7-d00b-4c76-ae5f-724eb1415f4a, groupInstanceId=None, clientId=console-consumer, clientHost=/127.0.0.1, sessionTimeoutMs=45000, rebalanceTimeoutMs=300000, supportedProtocols=List(range)) in group console-consumer-60803 with generation 8. (kafka.coordinator.group.GroupMetadata$)
[2025-08-08 16:34:23,949] INFO Loaded member MemberMetadata(memberId=console-consumer-16714cf7-d00b-4c76-ae5f-724eb1415f4a, groupInstanceId=None, clientId=console-consumer, clientHost=/127.0.0.1, sessionTimeoutMs=45000, rebalanceTimeoutMs=300000, supportedProtocols=List(range)) in group console-consumer-60803 with generation 9. (kafka.coordinator.group.GroupMetadata$)
[2025-08-08 16:34:23,950] INFO Loaded member MemberMetadata(memberId=console-consumer-16714cf7-d00b-4c76-ae5f-724eb1415f4a, groupInstanceId=None, clientId=console-consumer, clientHost=/127.0.0.1, sessionTimeoutMs=45000, rebalanceTimeoutMs=300000, supportedProtocols=List(range)) in group console-consumer-60803 with generation 10. (kafka.coordinator.group.GroupMetadata$)
[2025-08-08 16:34:23,950] INFO Loaded member MemberMetadata(memberId=console-consumer-16714cf7-d00b-4c76-ae5f-724eb1415f4a, groupInstanceId=None, clientId=console-consumer, clientHost=/127.0.0.1, sessionTimeoutMs=45000, rebalanceTimeoutMs=300000, supportedProtocols=List(range)) in group console-consumer-60803 with generation 11. (kafka.coordinator.group.GroupMetadata$)
[2025-08-08 16:34:23,950] INFO Loaded member MemberMetadata(memberId=console-consumer-16714cf7-d00b-4c76-ae5f-724eb1415f4a, groupInstanceId=None, clientId=console-consumer, clientHost=/127.0.0.1, sessionTimeoutMs=45000, rebalanceTimeoutMs=300000, supportedProtocols=List(range)) in group console-consumer-60803 with generation 12. (kafka.coordinator.group.GroupMetadata$)
[2025-08-08 16:34:23,951] INFO [GroupCoordinator 1]: Loading group metadata for console-consumer-60803 with generation 13 (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:23,951] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-8 in 251 milliseconds for epoch 4, of which 223 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,952] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-44 in 251 milliseconds for epoch 4, of which 251 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,952] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-2 in 252 milliseconds for epoch 4, of which 252 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,952] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-6 in 253 milliseconds for epoch 4, of which 253 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,953] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-46 in 252 milliseconds for epoch 4, of which 251 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:23,953] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-41 in 253 milliseconds for epoch 4, of which 253 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:34:25,230] INFO [KafkaApi-1] produce cost (in microseconds), produce={count=1, max=79396.0, mean=79396.0} callback={count=1, max=159624.0, mean=159624.0} ack={count=1, max=9579.0, mean=9579.0} (kafka.server.streamaspect.ElasticKafkaApis)
[2025-08-08 16:34:43,843] INFO Created Gauge for kafka.server.connection.count (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:43,844] INFO Created Gauge for kafka.server.connection.creation.rate (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:43,845] INFO Created Counter for kafka.io.threads.idle.time (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:43,846] INFO Created Gauge for kafka.io.threads.idle.rate.1m (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:43,846] INFO Created Gauge for kafka.server.kraft.current.leader (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:43,846] INFO Created Gauge for kafka.server.kraft.current.epoch (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:43,847] INFO Created Gauge for kafka.server.kraft.high.watermark (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:43,847] INFO Created Gauge for kafka.server.kraft.log.end.offset (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:43,847] INFO Created Gauge for kafka.server.kraft.log.end.epoch (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:43,847] INFO Created Gauge for kafka.server.kraft.commit.latency.avg (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:43,847] INFO Created Gauge for kafka.server.kraft.commit.latency.max (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:43,848] INFO Created Gauge for kafka.server.kraft.fetch.records.rate (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:43,848] INFO Created Gauge for kafka.server.kraft.append.records.rate (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:43,848] INFO Created Gauge for kafka.server.kraft.poll.idle.ratio.avg (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:43,848] INFO Created Counter for kafka.message.count (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:43,849] INFO Created Counter for kafka.network.io (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:43,849] INFO Created Counter for kafka.network.io (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:43,849] INFO Created Counter for kafka.topic.request.count (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:43,849] INFO Created Counter for kafka.topic.request.count (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:43,852] INFO Created Counter for kafka.request.count (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:43,853] INFO Created Counter for kafka.request.error.count (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:43,875] INFO Created Gauge for kafka.purgatory.size (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:43,875] INFO Created Gauge for kafka.partition.count (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:43,882] INFO Created Gauge for kafka.reassign.partition.count (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:43,886] INFO Created Gauge for kafka.group.count (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:43,888] INFO Created Gauge for kafka.group.preparing.rebalance.count (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:43,888] INFO Created Gauge for kafka.group.completing.rebalance.count (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:43,889] INFO Created Gauge for kafka.group.stable.count (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:43,890] INFO Created Gauge for kafka.group.dead.count (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:43,891] INFO Created Gauge for kafka.group.empty.count (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:43,891] INFO Created Gauge for kafka.broker.connection.accept.rate (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:43,892] INFO Created Gauge for kafka.listener.connection.accept.rate (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:43,892] INFO Created Gauge for kafka.listener.connection.accept.throttle.time (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:43,892] INFO Created Gauge for kafka.controller.active.count (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:43,892] INFO Created Counter for kafka.event.queue.time (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:43,893] INFO Created Gauge for kafka.event.queue.time.50p (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:43,893] INFO Created Gauge for kafka.event.queue.time.99p (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:43,893] INFO Created Gauge for kafka.event.queue.time.max (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:43,893] INFO Created Counter for kafka.event.queue.processing.time (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:43,894] INFO Created Gauge for kafka.event.queue.processing.time.50p (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:43,894] INFO Created Gauge for kafka.event.queue.processing.time.99p (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:43,894] INFO Created Gauge for kafka.event.queue.processing.time.max (io.opentelemetry.instrumentation.jmx.engine.MetricRegistrar)
[2025-08-08 16:34:45,779] INFO [GroupCoordinator 1]: Dynamic member with unknown member id joins group console-consumer-72151 in Empty state. Created a new member id console-consumer-a4ac6ca4-6b87-44cb-b48a-bed7873d20f6 and request the member to rejoin with this id. (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:45,792] INFO [GroupCoordinator 1]: Preparing to rebalance group console-consumer-72151 in state PreparingRebalance with old generation 0 (__consumer_offsets-37) (reason: Adding new member console-consumer-a4ac6ca4-6b87-44cb-b48a-bed7873d20f6 with group instance id None; client reason: need to re-join with the given member-id: console-consumer-a4ac6ca4-6b87-44cb-b48a-bed7873d20f6) (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:48,813] INFO [GroupCoordinator 1]: Stabilized group console-consumer-72151 generation 1 (__consumer_offsets-37) with 1 members (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:34:48,847] INFO [GroupCoordinator 1]: Assignment received from leader console-consumer-a4ac6ca4-6b87-44cb-b48a-bed7873d20f6 for group console-consumer-72151 for generation 1. The group has 1 members, 0 of which are static. (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:35:08,884] INFO [GroupCoordinator 1]: Member console-consumer-b3d25f8f-5cd0-4108-868b-4d1eb33f1710 in group console-consumer-53091 has failed, removing it from the group (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:35:08,885] INFO [GroupCoordinator 1]: Preparing to rebalance group console-consumer-53091 in state PreparingRebalance with old generation 1 (__consumer_offsets-49) (reason: removing member console-consumer-b3d25f8f-5cd0-4108-868b-4d1eb33f1710 on heartbeat expiration) (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:35:08,886] INFO [GroupCoordinator 1]: Group console-consumer-53091 with generation 2 is now empty (__consumer_offsets-49) (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:35:26,260] INFO [KafkaApi-1] produce cost (in microseconds), produce={count=6, max=3251.0, mean=1996.5} callback={count=6, max=192859.0, mean=159278.5} ack={count=6, max=669.0, mean=459.0} (kafka.server.streamaspect.ElasticKafkaApis)
[2025-08-08 16:35:36,372] INFO [GroupCoordinator 1]: Preparing to rebalance group console-consumer-72151 in state PreparingRebalance with old generation 1 (__consumer_offsets-37) (reason: Removing member console-consumer-a4ac6ca4-6b87-44cb-b48a-bed7873d20f6 on LeaveGroup; client reason: the consumer is being closed) (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:35:36,372] INFO [GroupCoordinator 1]: Group console-consumer-72151 with generation 2 is now empty (__consumer_offsets-37) (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:35:36,374] INFO [GroupCoordinator 1]: Member MemberMetadata(memberId=console-consumer-a4ac6ca4-6b87-44cb-b48a-bed7873d20f6, groupInstanceId=None, clientId=console-consumer, clientHost=/127.0.0.1, sessionTimeoutMs=45000, rebalanceTimeoutMs=300000, supportedProtocols=List(range, cooperative-sticky)) has left group console-consumer-72151 through explicit `LeaveGroup`; client reason: the consumer is being closed (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:35:44,858] INFO [GroupCoordinator 1]: Dynamic member with unknown member id joins group console-consumer-12856 in Empty state. Created a new member id console-consumer-1aafc139-0d17-452d-bba9-dc19b008bcdd and request the member to rejoin with this id. (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:35:44,862] INFO [GroupCoordinator 1]: Preparing to rebalance group console-consumer-12856 in state PreparingRebalance with old generation 0 (__consumer_offsets-43) (reason: Adding new member console-consumer-1aafc139-0d17-452d-bba9-dc19b008bcdd with group instance id None; client reason: need to re-join with the given member-id: console-consumer-1aafc139-0d17-452d-bba9-dc19b008bcdd) (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:35:47,877] INFO [GroupCoordinator 1]: Stabilized group console-consumer-12856 generation 1 (__consumer_offsets-43) with 1 members (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:35:47,905] INFO [GroupCoordinator 1]: Assignment received from leader console-consumer-1aafc139-0d17-452d-bba9-dc19b008bcdd for group console-consumer-12856 for generation 1. The group has 1 members, 0 of which are static. (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:36:27,136] INFO [KafkaApi-1] produce cost (in microseconds), produce={count=9, max=55701.0, mean=8268.777777777777} callback={count=9, max=231972.0, mean=154657.55555555556} ack={count=9, max=888.0, mean=540.7777777777778} (kafka.server.streamaspect.ElasticKafkaApis)
[2025-08-08 16:37:28,089] INFO [KafkaApi-1] produce cost (in microseconds), produce={count=6, max=3192.0, mean=2585.1666666666665} callback={count=6, max=168156.0, mean=143944.83333333334} ack={count=6, max=2036.0, mean=738.3333333333334} (kafka.server.streamaspect.ElasticKafkaApis)
[2025-08-08 16:38:31,507] INFO [KafkaApi-1] produce cost (in microseconds), produce={count=7, max=4214.0, mean=2855.8571428571427} callback={count=6, max=1517085.0, mean=411872.6666666667} ack={count=6, max=1937.0, mean=691.6666666666666} (kafka.server.streamaspect.ElasticKafkaApis)
[2025-08-08 16:38:31,822] WARN Attempting to send response via channel for which there is no open connection, connection id 127.0.0.1:9092-127.0.0.1:59283-4 (kafka.network.Processor)
[2025-08-08 16:38:33,119] WARN Attempting to send response via channel for which there is no open connection, connection id 127.0.0.1:9092-127.0.0.1:59576-4 (kafka.network.Processor)
[2025-08-08 16:38:37,055] WARN Attempting to send response via channel for which there is no open connection, connection id 127.0.0.1:9092-127.0.0.1:59579-4 (kafka.network.Processor)
[2025-08-08 16:38:38,348] ERROR LEAK: ByteBuf.release() was not called before it's garbage-collected. See https://netty.io/wiki/reference-counted-objects.html for more information.
Recent access records: 
#1:
	com.automq.stream.s3.operator.QuorumAwsObjectStorage.lambda$doWrite$0(QuorumAwsObjectStorage.java:61)
	java.base/java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:863)
	java.base/java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:841)
	java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2162)
	software.amazon.awssdk.utils.CompletableFutureUtils.lambda$forwardExceptionTo$0(CompletableFutureUtils.java:78)
	java.base/java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:863)
	java.base/java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:841)
	java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2162)
	software.amazon.awssdk.core.internal.http.pipeline.stages.AsyncApiCallMetricCollectionStage.lambda$execute$0(AsyncApiCallMetricCollectionStage.java:56)
	java.base/java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:863)
	java.base/java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:841)
	java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2162)
	software.amazon.awssdk.core.internal.http.pipeline.stages.AsyncApiCallTimeoutTrackingStage.lambda$execute$2(AsyncApiCallTimeoutTrackingStage.java:67)
	java.base/java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:863)
	java.base/java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:841)
	java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2162)
	software.amazon.awssdk.utils.CompletableFutureUtils.lambda$forwardExceptionTo$0(CompletableFutureUtils.java:78)
	java.base/java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:863)
	java.base/java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:841)
	java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2162)
	software.amazon.awssdk.core.internal.http.pipeline.stages.AsyncRetryableStage2$RetryingExecutor.maybeAttemptExecute(AsyncRetryableStage2.java:135)
	software.amazon.awssdk.core.internal.http.pipeline.stages.AsyncRetryableStage2$RetryingExecutor.maybeRetryExecute(AsyncRetryableStage2.java:152)
	software.amazon.awssdk.core.internal.http.pipeline.stages.AsyncRetryableStage2$RetryingExecutor.lambda$attemptExecute$1(AsyncRetryableStage2.java:113)
	java.base/java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:863)
	java.base/java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:841)
	java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2162)
	software.amazon.awssdk.utils.CompletableFutureUtils.lambda$forwardExceptionTo$0(CompletableFutureUtils.java:78)
	java.base/java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:863)
	java.base/java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:841)
	java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2162)
	software.amazon.awssdk.core.internal.http.pipeline.stages.MakeAsyncHttpRequestStage.lambda$execute$0(MakeAsyncHttpRequestStage.java:108)
	java.base/java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:863)
	java.base/java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:841)
	java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2162)
	software.amazon.awssdk.core.internal.http.pipeline.stages.MakeAsyncHttpRequestStage.completeResponseFuture(MakeAsyncHttpRequestStage.java:255)
	software.amazon.awssdk.core.internal.http.pipeline.stages.MakeAsyncHttpRequestStage.lambda$executeHttpRequest$3(MakeAsyncHttpRequestStage.java:167)
	java.base/java.util.concurrent.CompletableFuture.uniHandle(CompletableFuture.java:934)
	java.base/java.util.concurrent.CompletableFuture$UniHandle.tryFire(CompletableFuture.java:911)
	java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
#2:
	com.automq.stream.s3.wal.impl.object.RecordAccumulator.lambda$unsafeUpload$23(RecordAccumulator.java:636)
	java.base/java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:863)
	java.base/java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:841)
	java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	java.base/java.util.concurrent.CompletableFuture.complete(CompletableFuture.java:2147)
	com.automq.stream.s3.operator.QuorumAwsObjectStorage.lambda$tryReadRecursive$1(QuorumAwsObjectStorage.java:88)
	java.base/java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:863)
	java.base/java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:841)
	java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	java.base/java.util.concurrent.CompletableFuture.complete(CompletableFuture.java:2147)
	com.automq.stream.s3.operator.AwsObjectStorage.lambda$doRangeRead$2(AwsObjectStorage.java:193)
	java.base/java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:863)
	java.base/java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:841)
	java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	java.base/java.util.concurrent.CompletableFuture.complete(CompletableFuture.java:2147)
	software.amazon.awssdk.utils.async.SequentialSubscriber.onComplete(SequentialSubscriber.java:66)
	software.amazon.awssdk.core.async.listener.SubscriberListener$NotifyingSubscriber.onComplete(SubscriberListener.java:97)
	software.amazon.awssdk.core.internal.metrics.BytesReadTrackingPublisher$BytesReadTracker.onComplete(BytesReadTrackingPublisher.java:74)
	software.amazon.awssdk.http.nio.netty.internal.ResponseHandler$DataCountingPublisher$1.onComplete(ResponseHandler.java:519)
	software.amazon.awssdk.http.nio.netty.internal.ResponseHandler.runAndLogError(ResponseHandler.java:254)
	software.amazon.awssdk.http.nio.netty.internal.ResponseHandler.access$600(ResponseHandler.java:77)
	software.amazon.awssdk.http.nio.netty.internal.ResponseHandler$PublisherAdapter$1.onComplete(ResponseHandler.java:375)
	software.amazon.awssdk.http.nio.netty.internal.nrs.HandlerPublisher.publishMessage(HandlerPublisher.java:402)
	software.amazon.awssdk.http.nio.netty.internal.nrs.HandlerPublisher.flushBuffer(HandlerPublisher.java:338)
	software.amazon.awssdk.http.nio.netty.internal.nrs.HandlerPublisher.receivedDemand(HandlerPublisher.java:291)
	software.amazon.awssdk.http.nio.netty.internal.nrs.HandlerPublisher.access$200(HandlerPublisher.java:61)
	software.amazon.awssdk.http.nio.netty.internal.nrs.HandlerPublisher$ChannelSubscription$1.run(HandlerPublisher.java:495)
	io.netty.util.concurrent.AbstractEventExecutor.runTask$$$capture(AbstractEventExecutor.java:173)
	io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java)
	io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)
	io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
	io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	java.base/java.lang.Thread.run(Thread.java:833)
#3:
	com.automq.stream.s3.operator.QuorumAwsObjectStorage.lambda$doWrite$0(QuorumAwsObjectStorage.java:61)
	java.base/java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:863)
	java.base/java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:841)
	java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	java.base/java.util.concurrent.CompletableFuture.complete(CompletableFuture.java:2147)
	software.amazon.awssdk.core.internal.http.pipeline.stages.AsyncApiCallMetricCollectionStage.lambda$execute$0(AsyncApiCallMetricCollectionStage.java:58)
	java.base/java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:863)
	java.base/java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:841)
	java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	java.base/java.util.concurrent.CompletableFuture.complete(CompletableFuture.java:2147)
	software.amazon.awssdk.core.internal.http.pipeline.stages.AsyncApiCallTimeoutTrackingStage.lambda$execute$2(AsyncApiCallTimeoutTrackingStage.java:69)
	java.base/java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:863)
	java.base/java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:841)
	java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	java.base/java.util.concurrent.CompletableFuture.complete(CompletableFuture.java:2147)
	software.amazon.awssdk.core.internal.http.pipeline.stages.AsyncRetryableStage2$RetryingExecutor.lambda$attemptExecute$1(AsyncRetryableStage2.java:128)
	java.base/java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:863)
	java.base/java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:841)
	java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	java.base/java.util.concurrent.CompletableFuture.complete(CompletableFuture.java:2147)
	software.amazon.awssdk.core.internal.http.pipeline.stages.MakeAsyncHttpRequestStage.lambda$execute$0(MakeAsyncHttpRequestStage.java:110)
	java.base/java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:863)
	java.base/java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:841)
	java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	java.base/java.util.concurrent.CompletableFuture.complete(CompletableFuture.java:2147)
	software.amazon.awssdk.core.internal.http.pipeline.stages.MakeAsyncHttpRequestStage.completeResponseFuture(MakeAsyncHttpRequestStage.java:253)
	software.amazon.awssdk.core.internal.http.pipeline.stages.MakeAsyncHttpRequestStage.lambda$executeHttpRequest$3(MakeAsyncHttpRequestStage.java:167)
	java.base/java.util.concurrent.CompletableFuture.uniHandle(CompletableFuture.java:934)
	java.base/java.util.concurrent.CompletableFuture$UniHandle.tryFire(CompletableFuture.java:911)
	java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
#4:
	io.netty.buffer.AdvancedLeakAwareByteBuf.nioBuffers(AdvancedLeakAwareByteBuf.java:725)
	com.automq.stream.s3.operator.AwsObjectStorage.doWrite(AwsObjectStorage.java:216)
	com.automq.stream.s3.operator.QuorumAwsObjectStorage.doWrite(QuorumAwsObjectStorage.java:53)
	com.automq.stream.s3.operator.QuorumAwsObjectStorage.write(QuorumAwsObjectStorage.java:256)
	com.automq.stream.s3.wal.impl.object.RecordAccumulator.unsafeUpload(RecordAccumulator.java:562)
	com.automq.stream.s3.wal.impl.object.RecordAccumulator.unsafeUpload(RecordAccumulator.java:491)
	com.automq.stream.s3.wal.impl.object.RecordAccumulator.lambda$start$4(RecordAccumulator.java:186)
	com.automq.stream.utils.ThreadUtils.lambda$wrapRunnable$0(ThreadUtils.java:87)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:305)
	java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
#5:
	io.netty.buffer.AdvancedLeakAwareCompositeByteBuf.retainedDuplicate(AdvancedLeakAwareCompositeByteBuf.java:80)
	com.automq.stream.s3.operator.QuorumAwsObjectStorage.doWrite(QuorumAwsObjectStorage.java:52)
	com.automq.stream.s3.operator.QuorumAwsObjectStorage.write(QuorumAwsObjectStorage.java:256)
	com.automq.stream.s3.wal.impl.object.RecordAccumulator.unsafeUpload(RecordAccumulator.java:562)
	com.automq.stream.s3.wal.impl.object.RecordAccumulator.unsafeUpload(RecordAccumulator.java:491)
	com.automq.stream.s3.wal.impl.object.RecordAccumulator.lambda$start$4(RecordAccumulator.java:186)
	com.automq.stream.utils.ThreadUtils.lambda$wrapRunnable$0(ThreadUtils.java:87)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:305)
	java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
#6:
	io.netty.buffer.AdvancedLeakAwareCompositeByteBuf.addComponent(AdvancedLeakAwareCompositeByteBuf.java:920)
	com.automq.stream.s3.wal.impl.object.RecordAccumulator.unsafeUpload(RecordAccumulator.java:553)
	com.automq.stream.s3.wal.impl.object.RecordAccumulator.unsafeUpload(RecordAccumulator.java:491)
	com.automq.stream.s3.wal.impl.object.RecordAccumulator.lambda$start$4(RecordAccumulator.java:186)
	com.automq.stream.utils.ThreadUtils.lambda$wrapRunnable$0(ThreadUtils.java:87)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:305)
	java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
#7:
	io.netty.buffer.AdvancedLeakAwareCompositeByteBuf.addComponent(AdvancedLeakAwareCompositeByteBuf.java:920)
	com.automq.stream.s3.wal.impl.object.RecordAccumulator.unsafeUpload(RecordAccumulator.java:552)
	com.automq.stream.s3.wal.impl.object.RecordAccumulator.unsafeUpload(RecordAccumulator.java:491)
	com.automq.stream.s3.wal.impl.object.RecordAccumulator.lambda$start$4(RecordAccumulator.java:186)
	com.automq.stream.utils.ThreadUtils.lambda$wrapRunnable$0(ThreadUtils.java:87)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:305)
	java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
Created at:
	io.netty.buffer.AbstractByteBufAllocator.compositeDirectBuffer(AbstractByteBufAllocator.java:224)
	com.automq.stream.s3.ByteBufAlloc.compositeByteBuffer(ByteBufAlloc.java:136)
	com.automq.stream.s3.wal.impl.object.RecordAccumulator.unsafeUpload(RecordAccumulator.java:550)
	com.automq.stream.s3.wal.impl.object.RecordAccumulator.unsafeUpload(RecordAccumulator.java:491)
	com.automq.stream.s3.wal.impl.object.RecordAccumulator.lambda$start$4(RecordAccumulator.java:186)
	com.automq.stream.utils.ThreadUtils.lambda$wrapRunnable$0(ThreadUtils.java:87)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:305)
	java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
: 5 leak records were discarded because they were duplicates (io.netty.util.ResourceLeakDetector)
[2025-08-08 16:38:40,205] WARN Attempting to send response via channel for which there is no open connection, connection id 127.0.0.1:9092-127.0.0.1:59600-5 (kafka.network.Processor)
[2025-08-08 16:38:42,274] WARN Attempting to send response via channel for which there is no open connection, connection id 127.0.0.1:9092-127.0.0.1:59607-5 (kafka.network.Processor)
[2025-08-08 16:38:43,541] WARN Attempting to send response via channel for which there is no open connection, connection id 127.0.0.1:9092-127.0.0.1:59612-6 (kafka.network.Processor)
[2025-08-08 16:38:43,541] WARN Attempting to send response via channel for which there is no open connection, connection id 127.0.0.1:9092-127.0.0.1:59612-6 (kafka.network.Processor)
[2025-08-08 16:38:45,319] WARN Attempting to send response via channel for which there is no open connection, connection id 127.0.0.1:9092-127.0.0.1:59625-6 (kafka.network.Processor)
[2025-08-08 16:38:47,295] WARN Attempting to send response via channel for which there is no open connection, connection id 127.0.0.1:9092-127.0.0.1:59634-6 (kafka.network.Processor)
[2025-08-08 16:38:48,999] WARN Attempting to send response via channel for which there is no open connection, connection id 127.0.0.1:9092-127.0.0.1:59637-7 (kafka.network.Processor)
[2025-08-08 16:38:50,963] INFO [GroupCoordinator 1]: Preparing to rebalance group console-consumer-12856 in state PreparingRebalance with old generation 1 (__consumer_offsets-43) (reason: Removing member console-consumer-1aafc139-0d17-452d-bba9-dc19b008bcdd on LeaveGroup; client reason: the consumer is being closed) (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:38:50,964] INFO [GroupCoordinator 1]: Group console-consumer-12856 with generation 2 is now empty (__consumer_offsets-43) (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:38:50,967] INFO [GroupCoordinator 1]: Member MemberMetadata(memberId=console-consumer-1aafc139-0d17-452d-bba9-dc19b008bcdd, groupInstanceId=None, clientId=console-consumer, clientHost=/127.0.0.1, sessionTimeoutMs=45000, rebalanceTimeoutMs=300000, supportedProtocols=List(range, cooperative-sticky)) has left group console-consumer-12856 through explicit `LeaveGroup`; client reason: the consumer is being closed (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:38:55,979] WARN [GroupCoordinator 1]: Failed to write empty metadata for group console-consumer-12856: The group is rebalancing, so a rejoin is needed. (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:39:02,193] INFO [GroupCoordinator 1]: Dynamic member with unknown member id joins group console-consumer-70119 in Empty state. Created a new member id console-consumer-b360f5cf-b42c-4d22-90d7-aad25b0eb4d4 and request the member to rejoin with this id. (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:39:02,201] INFO [GroupCoordinator 1]: Preparing to rebalance group console-consumer-70119 in state PreparingRebalance with old generation 0 (__consumer_offsets-39) (reason: Adding new member console-consumer-b360f5cf-b42c-4d22-90d7-aad25b0eb4d4 with group instance id None; client reason: need to re-join with the given member-id: console-consumer-b360f5cf-b42c-4d22-90d7-aad25b0eb4d4) (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:39:05,209] INFO [GroupCoordinator 1]: Stabilized group console-consumer-70119 generation 1 (__consumer_offsets-39) with 1 members (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:39:05,251] INFO [GroupCoordinator 1]: Assignment received from leader console-consumer-b360f5cf-b42c-4d22-90d7-aad25b0eb4d4 for group console-consumer-70119 for generation 1. The group has 1 members, 0 of which are static. (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:39:10,278] INFO [GroupCoordinator 1]: Preparing to rebalance group console-consumer-70119 in state PreparingRebalance with old generation 1 (__consumer_offsets-39) (reason: Error REBALANCE_IN_PROGRESS when storing group assignment during SyncGroup (member: console-consumer-b360f5cf-b42c-4d22-90d7-aad25b0eb4d4)) (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:39:10,283] INFO [GroupCoordinator 1]: Stabilized group console-consumer-70119 generation 2 (__consumer_offsets-39) with 1 members (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:39:10,287] INFO [GroupCoordinator 1]: Assignment received from leader console-consumer-b360f5cf-b42c-4d22-90d7-aad25b0eb4d4 for group console-consumer-70119 for generation 2. The group has 1 members, 0 of which are static. (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:39:15,290] INFO [GroupCoordinator 1]: Preparing to rebalance group console-consumer-70119 in state PreparingRebalance with old generation 2 (__consumer_offsets-39) (reason: Error REBALANCE_IN_PROGRESS when storing group assignment during SyncGroup (member: console-consumer-b360f5cf-b42c-4d22-90d7-aad25b0eb4d4)) (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:39:15,294] INFO [GroupCoordinator 1]: Stabilized group console-consumer-70119 generation 3 (__consumer_offsets-39) with 1 members (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:39:15,297] INFO [GroupCoordinator 1]: Assignment received from leader console-consumer-b360f5cf-b42c-4d22-90d7-aad25b0eb4d4 for group console-consumer-70119 for generation 3. The group has 1 members, 0 of which are static. (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:39:20,306] INFO [GroupCoordinator 1]: Preparing to rebalance group console-consumer-70119 in state PreparingRebalance with old generation 3 (__consumer_offsets-39) (reason: Error REBALANCE_IN_PROGRESS when storing group assignment during SyncGroup (member: console-consumer-b360f5cf-b42c-4d22-90d7-aad25b0eb4d4)) (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:39:20,310] INFO [GroupCoordinator 1]: Stabilized group console-consumer-70119 generation 4 (__consumer_offsets-39) with 1 members (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:39:20,312] INFO [GroupCoordinator 1]: Assignment received from leader console-consumer-b360f5cf-b42c-4d22-90d7-aad25b0eb4d4 for group console-consumer-70119 for generation 4. The group has 1 members, 0 of which are static. (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:39:25,317] INFO [GroupCoordinator 1]: Preparing to rebalance group console-consumer-70119 in state PreparingRebalance with old generation 4 (__consumer_offsets-39) (reason: Error REBALANCE_IN_PROGRESS when storing group assignment during SyncGroup (member: console-consumer-b360f5cf-b42c-4d22-90d7-aad25b0eb4d4)) (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:39:25,320] INFO [GroupCoordinator 1]: Stabilized group console-consumer-70119 generation 5 (__consumer_offsets-39) with 1 members (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:39:25,322] INFO [GroupCoordinator 1]: Assignment received from leader console-consumer-b360f5cf-b42c-4d22-90d7-aad25b0eb4d4 for group console-consumer-70119 for generation 5. The group has 1 members, 0 of which are static. (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:39:30,325] INFO [GroupCoordinator 1]: Preparing to rebalance group console-consumer-70119 in state PreparingRebalance with old generation 5 (__consumer_offsets-39) (reason: Error REBALANCE_IN_PROGRESS when storing group assignment during SyncGroup (member: console-consumer-b360f5cf-b42c-4d22-90d7-aad25b0eb4d4)) (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:39:30,329] INFO [GroupCoordinator 1]: Stabilized group console-consumer-70119 generation 6 (__consumer_offsets-39) with 1 members (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:39:30,331] INFO [GroupCoordinator 1]: Assignment received from leader console-consumer-b360f5cf-b42c-4d22-90d7-aad25b0eb4d4 for group console-consumer-70119 for generation 6. The group has 1 members, 0 of which are static. (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:39:34,113] INFO [KafkaApi-1] produce cost (in microseconds), produce={count=18, max=5636.0, mean=1912.2777777777778} callback={count=19, max=8892720.0, mean=2941972.736842105} ack={count=19, max=829.0, mean=539.421052631579} (kafka.server.streamaspect.ElasticKafkaApis)
[2025-08-08 16:39:35,337] INFO [GroupCoordinator 1]: Preparing to rebalance group console-consumer-70119 in state PreparingRebalance with old generation 6 (__consumer_offsets-39) (reason: Error REBALANCE_IN_PROGRESS when storing group assignment during SyncGroup (member: console-consumer-b360f5cf-b42c-4d22-90d7-aad25b0eb4d4)) (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:39:35,340] INFO [GroupCoordinator 1]: Stabilized group console-consumer-70119 generation 7 (__consumer_offsets-39) with 1 members (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:39:35,344] INFO [GroupCoordinator 1]: Assignment received from leader console-consumer-b360f5cf-b42c-4d22-90d7-aad25b0eb4d4 for group console-consumer-70119 for generation 7. The group has 1 members, 0 of which are static. (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:39:40,356] INFO [GroupCoordinator 1]: Preparing to rebalance group console-consumer-70119 in state PreparingRebalance with old generation 7 (__consumer_offsets-39) (reason: Error REBALANCE_IN_PROGRESS when storing group assignment during SyncGroup (member: console-consumer-b360f5cf-b42c-4d22-90d7-aad25b0eb4d4)) (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:39:40,359] INFO [GroupCoordinator 1]: Stabilized group console-consumer-70119 generation 8 (__consumer_offsets-39) with 1 members (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:39:40,362] INFO [GroupCoordinator 1]: Assignment received from leader console-consumer-b360f5cf-b42c-4d22-90d7-aad25b0eb4d4 for group console-consumer-70119 for generation 8. The group has 1 members, 0 of which are static. (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:39:45,365] INFO [GroupCoordinator 1]: Preparing to rebalance group console-consumer-70119 in state PreparingRebalance with old generation 8 (__consumer_offsets-39) (reason: Error REBALANCE_IN_PROGRESS when storing group assignment during SyncGroup (member: console-consumer-b360f5cf-b42c-4d22-90d7-aad25b0eb4d4)) (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:39:45,368] INFO [GroupCoordinator 1]: Stabilized group console-consumer-70119 generation 9 (__consumer_offsets-39) with 1 members (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:39:45,371] INFO [GroupCoordinator 1]: Assignment received from leader console-consumer-b360f5cf-b42c-4d22-90d7-aad25b0eb4d4 for group console-consumer-70119 for generation 9. The group has 1 members, 0 of which are static. (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:40:25,345] INFO [GroupCoordinator 1]: Preparing to rebalance group console-consumer-70119 in state PreparingRebalance with old generation 9 (__consumer_offsets-39) (reason: Removing member console-consumer-b360f5cf-b42c-4d22-90d7-aad25b0eb4d4 on LeaveGroup; client reason: the consumer is being closed) (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:40:25,346] INFO [GroupCoordinator 1]: Group console-consumer-70119 with generation 10 is now empty (__consumer_offsets-39) (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:40:25,348] INFO [GroupCoordinator 1]: Member MemberMetadata(memberId=console-consumer-b360f5cf-b42c-4d22-90d7-aad25b0eb4d4, groupInstanceId=None, clientId=console-consumer, clientHost=/127.0.0.1, sessionTimeoutMs=45000, rebalanceTimeoutMs=300000, supportedProtocols=List(range, cooperative-sticky)) has left group console-consumer-70119 through explicit `LeaveGroup`; client reason: the consumer is being closed (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:40:34,368] INFO [GroupCoordinator 1]: Dynamic member with unknown member id joins group console-consumer-40978 in Empty state. Created a new member id console-consumer-bd028bc6-4d8e-4f2c-8a93-61a731d5f169 and request the member to rejoin with this id. (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:40:34,371] INFO [GroupCoordinator 1]: Preparing to rebalance group console-consumer-40978 in state PreparingRebalance with old generation 0 (__consumer_offsets-49) (reason: Adding new member console-consumer-bd028bc6-4d8e-4f2c-8a93-61a731d5f169 with group instance id None; client reason: need to re-join with the given member-id: console-consumer-bd028bc6-4d8e-4f2c-8a93-61a731d5f169) (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:40:35,715] INFO [KafkaApi-1] produce cost (in microseconds), produce={count=5, max=4035.0, mean=2687.0} callback={count=5, max=2584389.0, mean=2308229.4} ack={count=5, max=433.0, mean=376.8} (kafka.server.streamaspect.ElasticKafkaApis)
[2025-08-08 16:40:37,382] INFO [GroupCoordinator 1]: Stabilized group console-consumer-40978 generation 1 (__consumer_offsets-49) with 1 members (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:40:37,408] INFO [GroupCoordinator 1]: Assignment received from leader console-consumer-bd028bc6-4d8e-4f2c-8a93-61a731d5f169 for group console-consumer-40978 for generation 1. The group has 1 members, 0 of which are static. (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:40:51,253] INFO [GroupCoordinator 1]: Preparing to rebalance group console-consumer-40978 in state PreparingRebalance with old generation 1 (__consumer_offsets-49) (reason: Removing member console-consumer-bd028bc6-4d8e-4f2c-8a93-61a731d5f169 on LeaveGroup; client reason: the consumer is being closed) (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:40:51,253] INFO [GroupCoordinator 1]: Group console-consumer-40978 with generation 2 is now empty (__consumer_offsets-49) (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:40:51,255] INFO [GroupCoordinator 1]: Member MemberMetadata(memberId=console-consumer-bd028bc6-4d8e-4f2c-8a93-61a731d5f169, groupInstanceId=None, clientId=console-consumer, clientHost=/127.0.0.1, sessionTimeoutMs=45000, rebalanceTimeoutMs=300000, supportedProtocols=List(range, cooperative-sticky)) has left group console-consumer-40978 through explicit `LeaveGroup`; client reason: the consumer is being closed (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:41:00,298] INFO [GroupCoordinator 1]: Dynamic member with unknown member id joins group console-consumer-7731 in Empty state. Created a new member id console-consumer-9b601730-d98a-456a-bef5-07006e8be7a9 and request the member to rejoin with this id. (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:41:00,302] INFO [GroupCoordinator 1]: Preparing to rebalance group console-consumer-7731 in state PreparingRebalance with old generation 0 (__consumer_offsets-7) (reason: Adding new member console-consumer-9b601730-d98a-456a-bef5-07006e8be7a9 with group instance id None; client reason: need to re-join with the given member-id: console-consumer-9b601730-d98a-456a-bef5-07006e8be7a9) (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:41:03,316] INFO [GroupCoordinator 1]: Stabilized group console-consumer-7731 generation 1 (__consumer_offsets-7) with 1 members (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:41:03,351] INFO [GroupCoordinator 1]: Assignment received from leader console-consumer-9b601730-d98a-456a-bef5-07006e8be7a9 for group console-consumer-7731 for generation 1. The group has 1 members, 0 of which are static. (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:41:16,765] INFO [GroupCoordinator 1]: Preparing to rebalance group console-consumer-7731 in state PreparingRebalance with old generation 1 (__consumer_offsets-7) (reason: Removing member console-consumer-9b601730-d98a-456a-bef5-07006e8be7a9 on LeaveGroup; client reason: the consumer is being closed) (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:41:16,766] INFO [GroupCoordinator 1]: Group console-consumer-7731 with generation 2 is now empty (__consumer_offsets-7) (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:41:16,767] INFO [GroupCoordinator 1]: Member MemberMetadata(memberId=console-consumer-9b601730-d98a-456a-bef5-07006e8be7a9, groupInstanceId=None, clientId=console-consumer, clientHost=/127.0.0.1, sessionTimeoutMs=45000, rebalanceTimeoutMs=300000, supportedProtocols=List(range, cooperative-sticky)) has left group console-consumer-7731 through explicit `LeaveGroup`; client reason: the consumer is being closed (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:41:29,083] INFO [GroupCoordinator 1]: Dynamic member with unknown member id joins group console-consumer-58154 in Empty state. Created a new member id console-consumer-68d330f8-aa8a-4bb5-8cb4-daea1800dcfd and request the member to rejoin with this id. (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:41:29,086] INFO [GroupCoordinator 1]: Preparing to rebalance group console-consumer-58154 in state PreparingRebalance with old generation 0 (__consumer_offsets-44) (reason: Adding new member console-consumer-68d330f8-aa8a-4bb5-8cb4-daea1800dcfd with group instance id None; client reason: need to re-join with the given member-id: console-consumer-68d330f8-aa8a-4bb5-8cb4-daea1800dcfd) (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:41:32,094] INFO [GroupCoordinator 1]: Stabilized group console-consumer-58154 generation 1 (__consumer_offsets-44) with 1 members (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:41:32,118] INFO [GroupCoordinator 1]: Assignment received from leader console-consumer-68d330f8-aa8a-4bb5-8cb4-daea1800dcfd for group console-consumer-58154 for generation 1. The group has 1 members, 0 of which are static. (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:41:36,912] INFO [KafkaApi-1] produce cost (in microseconds), produce={count=5, max=3058.0, mean=2520.8} callback={count=5, max=2259171.0, mean=2225184.4} ack={count=5, max=511.0, mean=400.4} (kafka.server.streamaspect.ElasticKafkaApis)
[2025-08-08 16:41:48,451] INFO [GroupCoordinator 1]: Preparing to rebalance group console-consumer-58154 in state PreparingRebalance with old generation 1 (__consumer_offsets-44) (reason: Removing member console-consumer-68d330f8-aa8a-4bb5-8cb4-daea1800dcfd on LeaveGroup; client reason: the consumer is being closed) (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:41:48,453] INFO [GroupCoordinator 1]: Group console-consumer-58154 with generation 2 is now empty (__consumer_offsets-44) (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:41:48,454] INFO [GroupCoordinator 1]: Member MemberMetadata(memberId=console-consumer-68d330f8-aa8a-4bb5-8cb4-daea1800dcfd, groupInstanceId=None, clientId=console-consumer, clientHost=/127.0.0.1, sessionTimeoutMs=45000, rebalanceTimeoutMs=300000, supportedProtocols=List(range, cooperative-sticky)) has left group console-consumer-58154 through explicit `LeaveGroup`; client reason: the consumer is being closed (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 16:42:38,990] INFO [KafkaApi-1] produce cost (in microseconds), produce={count=5, max=2851.0, mean=2545.0} callback={count=5, max=2859292.0, mean=2368749.8} ack={count=5, max=15628.0, mean=3789.0} (kafka.server.streamaspect.ElasticKafkaApis)
[2025-08-08 16:43:44,223] INFO [KafkaApi-1] produce cost (in microseconds), produce={count=6, max=2957.0, mean=2472.3333333333335} callback={count=6, max=2323384.0, mean=858745.1666666666} ack={count=6, max=589.0, mean=467.8333333333333} (kafka.server.streamaspect.ElasticKafkaApis)
[2025-08-08 16:44:15,269] INFO [GroupMetadataManager brokerId=1] Group console-consumer-27657 transitioned to Dead in generation 5 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:44:15,288] ERROR LEAK: ByteBuf.release() was not called before it's garbage-collected. See https://netty.io/wiki/reference-counted-objects.html for more information.
Recent access records: 
#1:
	com.automq.stream.s3.operator.QuorumAwsObjectStorage.lambda$doWrite$0(QuorumAwsObjectStorage.java:61)
	java.base/java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:863)
	java.base/java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:841)
	java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	java.base/java.util.concurrent.CompletableFuture.complete(CompletableFuture.java:2147)
	software.amazon.awssdk.core.internal.http.pipeline.stages.AsyncApiCallMetricCollectionStage.lambda$execute$0(AsyncApiCallMetricCollectionStage.java:58)
	java.base/java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:863)
	java.base/java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:841)
	java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	java.base/java.util.concurrent.CompletableFuture.complete(CompletableFuture.java:2147)
	software.amazon.awssdk.core.internal.http.pipeline.stages.AsyncApiCallTimeoutTrackingStage.lambda$execute$2(AsyncApiCallTimeoutTrackingStage.java:69)
	java.base/java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:863)
	java.base/java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:841)
	java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	java.base/java.util.concurrent.CompletableFuture.complete(CompletableFuture.java:2147)
	software.amazon.awssdk.core.internal.http.pipeline.stages.AsyncRetryableStage2$RetryingExecutor.lambda$attemptExecute$1(AsyncRetryableStage2.java:128)
	java.base/java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:863)
	java.base/java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:841)
	java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	java.base/java.util.concurrent.CompletableFuture.complete(CompletableFuture.java:2147)
	software.amazon.awssdk.core.internal.http.pipeline.stages.MakeAsyncHttpRequestStage.lambda$execute$0(MakeAsyncHttpRequestStage.java:110)
	java.base/java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:863)
	java.base/java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:841)
	java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	java.base/java.util.concurrent.CompletableFuture.complete(CompletableFuture.java:2147)
	software.amazon.awssdk.core.internal.http.pipeline.stages.MakeAsyncHttpRequestStage.completeResponseFuture(MakeAsyncHttpRequestStage.java:253)
	software.amazon.awssdk.core.internal.http.pipeline.stages.MakeAsyncHttpRequestStage.lambda$executeHttpRequest$3(MakeAsyncHttpRequestStage.java:167)
	java.base/java.util.concurrent.CompletableFuture.uniHandle(CompletableFuture.java:934)
	java.base/java.util.concurrent.CompletableFuture$UniHandle.tryFire(CompletableFuture.java:911)
	java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
#2:
	com.automq.stream.s3.wal.impl.object.RecordAccumulator.lambda$unsafeUpload$23(RecordAccumulator.java:636)
	java.base/java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:863)
	java.base/java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:841)
	java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	java.base/java.util.concurrent.CompletableFuture.complete(CompletableFuture.java:2147)
	com.automq.stream.s3.operator.QuorumAwsObjectStorage.lambda$tryReadRecursive$1(QuorumAwsObjectStorage.java:88)
	java.base/java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:863)
	java.base/java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:841)
	java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	java.base/java.util.concurrent.CompletableFuture.complete(CompletableFuture.java:2147)
	com.automq.stream.s3.operator.AwsObjectStorage.lambda$doRangeRead$2(AwsObjectStorage.java:193)
	java.base/java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:863)
	java.base/java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:841)
	java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	java.base/java.util.concurrent.CompletableFuture.complete(CompletableFuture.java:2147)
	software.amazon.awssdk.utils.async.SequentialSubscriber.onComplete(SequentialSubscriber.java:66)
	software.amazon.awssdk.core.async.listener.SubscriberListener$NotifyingSubscriber.onComplete(SubscriberListener.java:97)
	software.amazon.awssdk.core.internal.metrics.BytesReadTrackingPublisher$BytesReadTracker.onComplete(BytesReadTrackingPublisher.java:74)
	software.amazon.awssdk.http.nio.netty.internal.ResponseHandler$DataCountingPublisher$1.onComplete(ResponseHandler.java:519)
	software.amazon.awssdk.http.nio.netty.internal.ResponseHandler.runAndLogError(ResponseHandler.java:254)
	software.amazon.awssdk.http.nio.netty.internal.ResponseHandler.access$600(ResponseHandler.java:77)
	software.amazon.awssdk.http.nio.netty.internal.ResponseHandler$PublisherAdapter$1.onComplete(ResponseHandler.java:375)
	software.amazon.awssdk.http.nio.netty.internal.nrs.HandlerPublisher.publishMessage(HandlerPublisher.java:402)
	software.amazon.awssdk.http.nio.netty.internal.nrs.HandlerPublisher.flushBuffer(HandlerPublisher.java:338)
	software.amazon.awssdk.http.nio.netty.internal.nrs.HandlerPublisher.receivedDemand(HandlerPublisher.java:291)
	software.amazon.awssdk.http.nio.netty.internal.nrs.HandlerPublisher.access$200(HandlerPublisher.java:61)
	software.amazon.awssdk.http.nio.netty.internal.nrs.HandlerPublisher$ChannelSubscription$1.run(HandlerPublisher.java:495)
	io.netty.util.concurrent.AbstractEventExecutor.runTask$$$capture(AbstractEventExecutor.java:173)
	io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java)
	io.netty.util.concurrent.AbstractEventExecutor.safeExecute$$$capture(AbstractEventExecutor.java:166)
	io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java)
	io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)
	io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
	io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:994)
	io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	java.base/java.lang.Thread.run(Thread.java:833)
#3:
	io.netty.buffer.AdvancedLeakAwareByteBuf.nioBuffers(AdvancedLeakAwareByteBuf.java:725)
	com.automq.stream.s3.operator.AwsObjectStorage.doWrite(AwsObjectStorage.java:216)
	com.automq.stream.s3.operator.QuorumAwsObjectStorage.doWrite(QuorumAwsObjectStorage.java:53)
	com.automq.stream.s3.operator.QuorumAwsObjectStorage.write(QuorumAwsObjectStorage.java:256)
	com.automq.stream.s3.wal.impl.object.RecordAccumulator.unsafeUpload(RecordAccumulator.java:562)
	com.automq.stream.s3.wal.impl.object.RecordAccumulator.unsafeUpload(RecordAccumulator.java:491)
	com.automq.stream.s3.wal.impl.object.RecordAccumulator.lambda$start$4(RecordAccumulator.java:186)
	com.automq.stream.utils.ThreadUtils.lambda$wrapRunnable$0(ThreadUtils.java:87)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:305)
	java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
#4:
	io.netty.buffer.AdvancedLeakAwareCompositeByteBuf.retainedDuplicate(AdvancedLeakAwareCompositeByteBuf.java:80)
	com.automq.stream.s3.operator.QuorumAwsObjectStorage.doWrite(QuorumAwsObjectStorage.java:52)
	com.automq.stream.s3.operator.QuorumAwsObjectStorage.write(QuorumAwsObjectStorage.java:256)
	com.automq.stream.s3.wal.impl.object.RecordAccumulator.unsafeUpload(RecordAccumulator.java:562)
	com.automq.stream.s3.wal.impl.object.RecordAccumulator.unsafeUpload(RecordAccumulator.java:491)
	com.automq.stream.s3.wal.impl.object.RecordAccumulator.lambda$start$4(RecordAccumulator.java:186)
	com.automq.stream.utils.ThreadUtils.lambda$wrapRunnable$0(ThreadUtils.java:87)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:305)
	java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
#5:
	io.netty.buffer.AdvancedLeakAwareCompositeByteBuf.addComponent(AdvancedLeakAwareCompositeByteBuf.java:920)
	com.automq.stream.s3.wal.impl.object.RecordAccumulator.unsafeUpload(RecordAccumulator.java:553)
	com.automq.stream.s3.wal.impl.object.RecordAccumulator.unsafeUpload(RecordAccumulator.java:491)
	com.automq.stream.s3.wal.impl.object.RecordAccumulator.lambda$start$4(RecordAccumulator.java:186)
	com.automq.stream.utils.ThreadUtils.lambda$wrapRunnable$0(ThreadUtils.java:87)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:305)
	java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
#6:
	io.netty.buffer.AdvancedLeakAwareCompositeByteBuf.addComponent(AdvancedLeakAwareCompositeByteBuf.java:920)
	com.automq.stream.s3.wal.impl.object.RecordAccumulator.unsafeUpload(RecordAccumulator.java:552)
	com.automq.stream.s3.wal.impl.object.RecordAccumulator.unsafeUpload(RecordAccumulator.java:491)
	com.automq.stream.s3.wal.impl.object.RecordAccumulator.lambda$start$4(RecordAccumulator.java:186)
	com.automq.stream.utils.ThreadUtils.lambda$wrapRunnable$0(ThreadUtils.java:87)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:305)
	java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
Created at:
	io.netty.buffer.AbstractByteBufAllocator.compositeDirectBuffer(AbstractByteBufAllocator.java:224)
	com.automq.stream.s3.ByteBufAlloc.compositeByteBuffer(ByteBufAlloc.java:136)
	com.automq.stream.s3.wal.impl.object.RecordAccumulator.unsafeUpload(RecordAccumulator.java:550)
	com.automq.stream.s3.wal.impl.object.RecordAccumulator.unsafeUpload(RecordAccumulator.java:491)
	com.automq.stream.s3.wal.impl.object.RecordAccumulator.lambda$start$4(RecordAccumulator.java:186)
	com.automq.stream.utils.ThreadUtils.lambda$wrapRunnable$0(ThreadUtils.java:87)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:305)
	java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
: 6 leak records were discarded because they were duplicates (io.netty.util.ResourceLeakDetector)
[2025-08-08 16:44:15,310] INFO [GroupMetadataManager brokerId=1] Group console-consumer-58154 transitioned to Dead in generation 2 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:44:15,317] INFO [GroupMetadataManager brokerId=1] Group console-consumer-93360 transitioned to Dead in generation 2 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:44:15,346] INFO [GroupMetadataManager brokerId=1] Group console-consumer-90869 transitioned to Dead in generation 2 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:44:15,362] INFO [GroupMetadataManager brokerId=1] Group console-consumer-7731 transitioned to Dead in generation 2 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:44:15,365] INFO [GroupMetadataManager brokerId=1] Group console-consumer-53091 transitioned to Dead in generation 2 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:44:15,365] INFO [GroupMetadataManager brokerId=1] Group console-consumer-12856 transitioned to Dead in generation 2 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:44:15,366] INFO [GroupMetadataManager brokerId=1] Group console-consumer-40978 transitioned to Dead in generation 2 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:44:15,367] INFO [GroupMetadataManager brokerId=1] Group console-consumer-60803 transitioned to Dead in generation 13 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:44:15,388] INFO [GroupMetadataManager brokerId=1] Group console-consumer-72151 transitioned to Dead in generation 2 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:44:15,389] INFO [GroupMetadataManager brokerId=1] Group console-consumer-70119 transitioned to Dead in generation 10 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 16:44:45,161] INFO [KafkaApi-1] produce cost (in microseconds), produce={count=6, max=4743.0, mean=2876.3333333333335} callback={count=6, max=160865.0, mean=143560.66666666666} ack={count=6, max=717.0, mean=474.5} (kafka.server.streamaspect.ElasticKafkaApis)
[2025-08-08 16:45:46,080] INFO [KafkaApi-1] produce cost (in microseconds), produce={count=6, max=3783.0, mean=2523.0} callback={count=6, max=156266.0, mean=138813.66666666666} ack={count=6, max=480.0, mean=421.8333333333333} (kafka.server.streamaspect.ElasticKafkaApis)
[2025-08-08 16:46:26,582] ERROR LEAK: ByteBuf.release() was not called before it's garbage-collected. See https://netty.io/wiki/reference-counted-objects.html for more information.
Recent access records: 
#1:
	io.netty.buffer.AdvancedLeakAwareCompositeByteBuf.nioBuffers(AdvancedLeakAwareCompositeByteBuf.java:710)
	com.automq.stream.s3.operator.AwsObjectStorage.doWrite(AwsObjectStorage.java:216)
	com.automq.stream.s3.operator.AbstractObjectStorage.write0(AbstractObjectStorage.java:330)
	com.automq.stream.s3.operator.AbstractObjectStorage.lambda$delayedWrite0$12(AbstractObjectStorage.java:409)
	com.automq.stream.utils.ThreadUtils.lambda$wrapRunnable$0(ThreadUtils.java:87)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
#2:
	com.automq.stream.s3.operator.AbstractObjectStorage.lambda$write0$10(AbstractObjectStorage.java:372)
	java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire$$$capture(CompletableFuture.java:718)
	java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java)
	java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	java.base/java.util.concurrent.CompletableFuture.complete(CompletableFuture.java:2147)
	software.amazon.awssdk.core.internal.http.pipeline.stages.AsyncApiCallMetricCollectionStage.lambda$execute$0(AsyncApiCallMetricCollectionStage.java:58)
	java.base/java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:863)
	java.base/java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:841)
	java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	java.base/java.util.concurrent.CompletableFuture.complete(CompletableFuture.java:2147)
	software.amazon.awssdk.core.internal.http.pipeline.stages.AsyncApiCallTimeoutTrackingStage.lambda$execute$2(AsyncApiCallTimeoutTrackingStage.java:69)
	java.base/java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:863)
	java.base/java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:841)
	java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	java.base/java.util.concurrent.CompletableFuture.complete(CompletableFuture.java:2147)
	software.amazon.awssdk.core.internal.http.pipeline.stages.AsyncRetryableStage2$RetryingExecutor.lambda$attemptExecute$1(AsyncRetryableStage2.java:128)
	java.base/java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:863)
	java.base/java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:841)
	java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	java.base/java.util.concurrent.CompletableFuture.complete(CompletableFuture.java:2147)
	software.amazon.awssdk.core.internal.http.pipeline.stages.MakeAsyncHttpRequestStage.lambda$execute$0(MakeAsyncHttpRequestStage.java:110)
	java.base/java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:863)
	java.base/java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:841)
	java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	java.base/java.util.concurrent.CompletableFuture.complete(CompletableFuture.java:2147)
	software.amazon.awssdk.core.internal.http.pipeline.stages.MakeAsyncHttpRequestStage.completeResponseFuture(MakeAsyncHttpRequestStage.java:253)
	software.amazon.awssdk.core.internal.http.pipeline.stages.MakeAsyncHttpRequestStage.lambda$executeHttpRequest$3(MakeAsyncHttpRequestStage.java:167)
	java.base/java.util.concurrent.CompletableFuture.uniHandle(CompletableFuture.java:934)
	java.base/java.util.concurrent.CompletableFuture$UniHandle.tryFire(CompletableFuture.java:911)
	java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
#3:
	io.netty.buffer.AdvancedLeakAwareCompositeByteBuf.nioBuffers(AdvancedLeakAwareCompositeByteBuf.java:710)
	com.automq.stream.s3.operator.AwsObjectStorage.doWrite(AwsObjectStorage.java:216)
	com.automq.stream.s3.operator.AbstractObjectStorage.write0(AbstractObjectStorage.java:330)
	com.automq.stream.s3.operator.AbstractObjectStorage.lambda$queuedWrite0$13(AbstractObjectStorage.java:417)
	com.automq.stream.s3.operator.AbstractObjectStorage$AsyncTask.run(AbstractObjectStorage.java:1190)
	java.base/java.util.concurrent.CompletableFuture.uniRunNow(CompletableFuture.java:819)
	java.base/java.util.concurrent.CompletableFuture.uniRunStage(CompletableFuture.java:803)
	java.base/java.util.concurrent.CompletableFuture.thenRun(CompletableFuture.java:2195)
	com.automq.stream.s3.operator.AbstractObjectStorage.maybeRunNextWriteTask(AbstractObjectStorage.java:843)
	com.automq.stream.s3.operator.AbstractObjectStorage.queuedWrite0(AbstractObjectStorage.java:422)
	com.automq.stream.s3.operator.AbstractObjectStorage.lambda$write$6(AbstractObjectStorage.java:295)
	java.base/java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:863)
	java.base/java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:841)
	java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
#4:
	io.netty.buffer.AdvancedLeakAwareCompositeByteBuf.addComponent(AdvancedLeakAwareCompositeByteBuf.java:920)
	com.automq.stream.s3.operator.ProxyWriter$ObjectWriter.write(ProxyWriter.java:140)
	com.automq.stream.s3.operator.ProxyWriter.write(ProxyWriter.java:64)
	com.automq.stream.s3.operator.QuorumAwsObjectStorage$QuorumWriter.write(QuorumAwsObjectStorage.java:275)
	com.automq.stream.s3.compact.operator.DataBlockWriter.close(DataBlockWriter.java:128)
	com.automq.stream.s3.compact.CompactionUploader.lambda$writeStreamObject$2(CompactionUploader.java:126)
	java.base/java.util.concurrent.CompletableFuture$UniCompose.tryFire(CompletableFuture.java:1150)
	java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	java.base/java.util.concurrent.CompletableFuture.postFire(CompletableFuture.java:614)
	java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire$$$capture(CompletableFuture.java:726)
	java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java)
	java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
Created at:
	io.netty.buffer.AbstractByteBufAllocator.compositeDirectBuffer(AbstractByteBufAllocator.java:224)
	com.automq.stream.s3.ByteBufAlloc.compositeByteBuffer(ByteBufAlloc.java:136)
	com.automq.stream.s3.operator.ProxyWriter$ObjectWriter.<init>(ProxyWriter.java:135)
	com.automq.stream.s3.operator.ProxyWriter.<init>(ProxyWriter.java:41)
	com.automq.stream.s3.operator.ProxyWriter.<init>(ProxyWriter.java:56)
	com.automq.stream.s3.operator.AbstractObjectStorage.writer(AbstractObjectStorage.java:210)
	com.automq.stream.s3.operator.QuorumAwsObjectStorage.writer(QuorumAwsObjectStorage.java:224)
	com.automq.stream.s3.compact.operator.DataBlockWriter.<init>(DataBlockWriter.java:67)
	com.automq.stream.s3.compact.CompactionUploader.lambda$writeStreamObject$5(CompactionUploader.java:124)
	java.base/java.util.concurrent.CompletableFuture$UniCompose.tryFire(CompletableFuture.java:1150)
	java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833) (io.netty.util.ResourceLeakDetector)
[2025-08-08 16:46:47,035] INFO [KafkaApi-1] produce cost (in microseconds), produce={count=6, max=3308.0, mean=2660.5} callback={count=6, max=161953.0, mean=145368.0} ack={count=6, max=597.0, mean=520.0} (kafka.server.streamaspect.ElasticKafkaApis)
[2025-08-08 16:47:48,018] INFO [KafkaApi-1] produce cost (in microseconds), produce={count=6, max=3313.0, mean=2217.8333333333335} callback={count=6, max=162730.0, mean=149429.66666666666} ack={count=6, max=529.0, mean=391.1666666666667} (kafka.server.streamaspect.ElasticKafkaApis)
[2025-08-08 16:48:49,077] INFO [KafkaApi-1] produce cost (in microseconds), produce={count=6, max=4095.0, mean=2598.6666666666665} callback={count=6, max=204196.0, mean=162757.33333333334} ack={count=6, max=470.0, mean=390.0} (kafka.server.streamaspect.ElasticKafkaApis)
[2025-08-08 16:49:50,032] INFO [KafkaApi-1] produce cost (in microseconds), produce={count=6, max=3439.0, mean=2623.0} callback={count=6, max=173445.0, mean=147794.83333333334} ack={count=6, max=463.0, mean=345.0} (kafka.server.streamaspect.ElasticKafkaApis)
[2025-08-08 16:50:20,352] ERROR LEAK: ByteBuf.release() was not called before it's garbage-collected. See https://netty.io/wiki/reference-counted-objects.html for more information.
Recent access records: 
#1:
	io.netty.buffer.AdvancedLeakAwareCompositeByteBuf.nioBuffers(AdvancedLeakAwareCompositeByteBuf.java:710)
	com.automq.stream.s3.operator.AwsObjectStorage.doWrite(AwsObjectStorage.java:216)
	com.automq.stream.s3.operator.AbstractObjectStorage.write0(AbstractObjectStorage.java:330)
	com.automq.stream.s3.operator.AbstractObjectStorage.lambda$delayedWrite0$12(AbstractObjectStorage.java:409)
	com.automq.stream.utils.ThreadUtils.lambda$wrapRunnable$0(ThreadUtils.java:87)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
#2:
	com.automq.stream.s3.operator.AbstractObjectStorage.lambda$write0$10(AbstractObjectStorage.java:372)
	java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire$$$capture(CompletableFuture.java:718)
	java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java)
	java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	java.base/java.util.concurrent.CompletableFuture.complete(CompletableFuture.java:2147)
	software.amazon.awssdk.core.internal.http.pipeline.stages.AsyncApiCallMetricCollectionStage.lambda$execute$0(AsyncApiCallMetricCollectionStage.java:58)
	java.base/java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:863)
	java.base/java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:841)
	java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	java.base/java.util.concurrent.CompletableFuture.complete(CompletableFuture.java:2147)
	software.amazon.awssdk.core.internal.http.pipeline.stages.AsyncApiCallTimeoutTrackingStage.lambda$execute$2(AsyncApiCallTimeoutTrackingStage.java:69)
	java.base/java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:863)
	java.base/java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:841)
	java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	java.base/java.util.concurrent.CompletableFuture.complete(CompletableFuture.java:2147)
	software.amazon.awssdk.core.internal.http.pipeline.stages.AsyncRetryableStage2$RetryingExecutor.lambda$attemptExecute$1(AsyncRetryableStage2.java:128)
	java.base/java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:863)
	java.base/java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:841)
	java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	java.base/java.util.concurrent.CompletableFuture.complete(CompletableFuture.java:2147)
	software.amazon.awssdk.core.internal.http.pipeline.stages.MakeAsyncHttpRequestStage.lambda$execute$0(MakeAsyncHttpRequestStage.java:110)
	java.base/java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:863)
	java.base/java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:841)
	java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	java.base/java.util.concurrent.CompletableFuture.complete(CompletableFuture.java:2147)
	software.amazon.awssdk.core.internal.http.pipeline.stages.MakeAsyncHttpRequestStage.completeResponseFuture(MakeAsyncHttpRequestStage.java:253)
	software.amazon.awssdk.core.internal.http.pipeline.stages.MakeAsyncHttpRequestStage.lambda$executeHttpRequest$3(MakeAsyncHttpRequestStage.java:167)
	java.base/java.util.concurrent.CompletableFuture.uniHandle(CompletableFuture.java:934)
	java.base/java.util.concurrent.CompletableFuture$UniHandle.tryFire(CompletableFuture.java:911)
	java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
#3:
	io.netty.buffer.AdvancedLeakAwareCompositeByteBuf.nioBuffers(AdvancedLeakAwareCompositeByteBuf.java:710)
	com.automq.stream.s3.operator.AwsObjectStorage.doWrite(AwsObjectStorage.java:216)
	com.automq.stream.s3.operator.AbstractObjectStorage.write0(AbstractObjectStorage.java:330)
	com.automq.stream.s3.operator.AbstractObjectStorage.lambda$queuedWrite0$13(AbstractObjectStorage.java:417)
	com.automq.stream.s3.operator.AbstractObjectStorage$AsyncTask.run(AbstractObjectStorage.java:1190)
	java.base/java.util.concurrent.CompletableFuture.uniRunNow(CompletableFuture.java:819)
	java.base/java.util.concurrent.CompletableFuture.uniRunStage(CompletableFuture.java:803)
	java.base/java.util.concurrent.CompletableFuture.thenRun(CompletableFuture.java:2195)
	com.automq.stream.s3.operator.AbstractObjectStorage.maybeRunNextWriteTask(AbstractObjectStorage.java:843)
	com.automq.stream.s3.operator.AbstractObjectStorage.queuedWrite0(AbstractObjectStorage.java:422)
	com.automq.stream.s3.operator.AbstractObjectStorage.lambda$write$6(AbstractObjectStorage.java:295)
	java.base/java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:863)
	java.base/java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:841)
	java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
#4:
	io.netty.buffer.AdvancedLeakAwareCompositeByteBuf.addComponent(AdvancedLeakAwareCompositeByteBuf.java:920)
	com.automq.stream.s3.operator.ProxyWriter$ObjectWriter.write(ProxyWriter.java:140)
	com.automq.stream.s3.operator.ProxyWriter.write(ProxyWriter.java:64)
	com.automq.stream.s3.operator.QuorumAwsObjectStorage$QuorumWriter.write(QuorumAwsObjectStorage.java:275)
	com.automq.stream.s3.compact.operator.DataBlockWriter.close(DataBlockWriter.java:128)
	com.automq.stream.s3.compact.CompactionUploader.complete(CompactionUploader.java:158)
	com.automq.stream.s3.compact.CompactionManager.executeCompactionPlans(CompactionManager.java:807)
	com.automq.stream.s3.compact.CompactionManager.buildCompactRequest(CompactionManager.java:600)
	com.automq.stream.s3.compact.CompactionManager.compactObjects(CompactionManager.java:360)
	com.automq.stream.s3.compact.CompactionManager.compact(CompactionManager.java:300)
	com.automq.stream.s3.compact.CompactionManager.lambda$compact$7(CompactionManager.java:238)
	java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire$$$capture(CompletableFuture.java:718)
	java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java)
	java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
#5:
	io.netty.buffer.AdvancedLeakAwareCompositeByteBuf.addComponent(AdvancedLeakAwareCompositeByteBuf.java:920)
	com.automq.stream.s3.operator.ProxyWriter$ObjectWriter.copyOnWrite(ProxyWriter.java:150)
	com.automq.stream.s3.operator.ProxyWriter.copyOnWrite(ProxyWriter.java:77)
	com.automq.stream.s3.operator.QuorumAwsObjectStorage$QuorumWriter.copyOnWrite(QuorumAwsObjectStorage.java:300)
	com.automq.stream.s3.compact.operator.DataBlockWriter.forceUpload(DataBlockWriter.java:89)
	com.automq.stream.s3.compact.CompactionUploader.forceUploadStreamSetObject(CompactionUploader.java:151)
	com.automq.stream.utils.FutureUtil.exec(FutureUtil.java:87)
	com.automq.stream.s3.compact.CompactionManager.lambda$executeCompactionPlans$43(CompactionManager.java:750)
	java.base/java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:863)
	java.base/java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:841)
	java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	java.base/java.util.concurrent.CompletableFuture.postFire(CompletableFuture.java:614)
	java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire$$$capture(CompletableFuture.java:726)
	java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java)
	java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	com.automq.stream.utils.ThreadUtils.lambda$wrapRunnable$0(ThreadUtils.java:87)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
Created at:
	io.netty.buffer.AbstractByteBufAllocator.compositeDirectBuffer(AbstractByteBufAllocator.java:224)
	com.automq.stream.s3.ByteBufAlloc.compositeByteBuffer(ByteBufAlloc.java:136)
	com.automq.stream.s3.operator.ProxyWriter$ObjectWriter.copyOnWrite(ProxyWriter.java:150)
	com.automq.stream.s3.operator.ProxyWriter.copyOnWrite(ProxyWriter.java:77)
	com.automq.stream.s3.operator.QuorumAwsObjectStorage$QuorumWriter.copyOnWrite(QuorumAwsObjectStorage.java:300)
	com.automq.stream.s3.compact.operator.DataBlockWriter.forceUpload(DataBlockWriter.java:89)
	com.automq.stream.s3.compact.CompactionUploader.forceUploadStreamSetObject(CompactionUploader.java:151)
	com.automq.stream.utils.FutureUtil.exec(FutureUtil.java:87)
	com.automq.stream.s3.compact.CompactionManager.lambda$executeCompactionPlans$43(CompactionManager.java:750)
	java.base/java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:863)
	java.base/java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:841)
	java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	java.base/java.util.concurrent.CompletableFuture.postFire(CompletableFuture.java:614)
	java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire$$$capture(CompletableFuture.java:726)
	java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java)
	java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	com.automq.stream.utils.ThreadUtils.lambda$wrapRunnable$0(ThreadUtils.java:87)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833) (io.netty.util.ResourceLeakDetector)
[2025-08-08 16:50:50,996] INFO [KafkaApi-1] produce cost (in microseconds), produce={count=6, max=3654.0, mean=2682.5} callback={count=6, max=163791.0, mean=146253.33333333334} ack={count=6, max=665.0, mean=496.0} (kafka.server.streamaspect.ElasticKafkaApis)
[2025-08-08 16:51:51,888] INFO [KafkaApi-1] produce cost (in microseconds), produce={count=6, max=3031.0, mean=2479.1666666666665} callback={count=6, max=165758.0, mean=135845.33333333334} ack={count=6, max=479.0, mean=364.6666666666667} (kafka.server.streamaspect.ElasticKafkaApis)
[2025-08-08 16:52:52,830] INFO [KafkaApi-1] produce cost (in microseconds), produce={count=6, max=2938.0, mean=2035.8333333333333} callback={count=6, max=165553.0, mean=142517.0} ack={count=6, max=870.0, mean=514.1666666666666} (kafka.server.streamaspect.ElasticKafkaApis)
[2025-08-08 16:53:53,962] INFO [KafkaApi-1] produce cost (in microseconds), produce={count=6, max=2517.0, mean=2115.1666666666665} callback={count=6, max=223989.0, mean=178904.16666666666} ack={count=6, max=500.0, mean=356.0} (kafka.server.streamaspect.ElasticKafkaApis)
[2025-08-08 16:54:54,876] INFO [KafkaApi-1] produce cost (in microseconds), produce={count=6, max=3319.0, mean=2401.6666666666665} callback={count=6, max=161413.0, mean=140151.16666666666} ack={count=6, max=506.0, mean=361.3333333333333} (kafka.server.streamaspect.ElasticKafkaApis)
[2025-08-08 16:55:55,833] INFO [KafkaApi-1] produce cost (in microseconds), produce={count=6, max=2484.0, mean=2126.0} callback={count=6, max=169116.0, mean=148800.33333333334} ack={count=6, max=803.0, mean=437.0} (kafka.server.streamaspect.ElasticKafkaApis)
[2025-08-08 16:56:56,745] INFO [KafkaApi-1] produce cost (in microseconds), produce={count=6, max=6419.0, mean=3029.6666666666665} callback={count=6, max=163837.0, mean=140930.0} ack={count=6, max=505.0, mean=395.1666666666667} (kafka.server.streamaspect.ElasticKafkaApis)
[2025-08-08 16:57:27,058] ERROR LEAK: ByteBuf.release() was not called before it's garbage-collected. See https://netty.io/wiki/reference-counted-objects.html for more information.
Recent access records: 
Created at:
	io.netty.buffer.AbstractByteBufAllocator.compositeDirectBuffer(AbstractByteBufAllocator.java:224)
	com.automq.stream.s3.ByteBufAlloc.compositeByteBuffer(ByteBufAlloc.java:136)
	com.automq.stream.s3.operator.MultiPartWriter$ObjectPart.<init>(MultiPartWriter.java:214)
	com.automq.stream.s3.operator.MultiPartWriter.copyWrite0(MultiPartWriter.java:133)
	com.automq.stream.s3.operator.MultiPartWriter.copyWrite(MultiPartWriter.java:121)
	com.automq.stream.s3.operator.ProxyWriter.copyWrite(ProxyWriter.java:86)
	com.automq.stream.s3.operator.QuorumAwsObjectStorage$QuorumWriter.copyWrite(QuorumAwsObjectStorage.java:307)
	com.automq.stream.s3.compact.StreamObjectCompactor$CompactByPhysicalMerge.compact(StreamObjectCompactor.java:341)
	com.automq.stream.s3.compact.StreamObjectCompactor.compact0(StreamObjectCompactor.java:200)
	com.automq.stream.s3.compact.StreamObjectCompactor.compact(StreamObjectCompactor.java:128)
	com.automq.stream.s3.S3StreamClient$StreamWrapper.compact(S3StreamClient.java:445)
	com.automq.stream.s3.S3StreamClient$StreamWrapper.compactV1(S3StreamClient.java:426)
	com.automq.stream.s3.S3StreamClient$StreamWrapper.compact(S3StreamClient.java:402)
	com.automq.stream.s3.S3StreamClient.lambda$startStreamObjectsCompactions$6(S3StreamClient.java:167)
	java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	com.automq.stream.s3.S3StreamClient.lambda$startStreamObjectsCompactions$7(S3StreamClient.java:167)
	com.automq.stream.utils.ThreadUtils.lambda$wrapRunnable$0(ThreadUtils.java:87)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:305)
	java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833) (io.netty.util.ResourceLeakDetector)
[2025-08-08 16:57:57,692] INFO [KafkaApi-1] produce cost (in microseconds), produce={count=6, max=2640.0, mean=2256.6666666666665} callback={count=6, max=177198.0, mean=147126.5} ack={count=6, max=553.0, mean=381.3333333333333} (kafka.server.streamaspect.ElasticKafkaApis)
[2025-08-08 16:58:58,556] INFO [KafkaApi-1] produce cost (in microseconds), produce={count=6, max=2576.0, mean=2201.6666666666665} callback={count=6, max=151081.0, mean=136407.5} ack={count=6, max=490.0, mean=432.5} (kafka.server.streamaspect.ElasticKafkaApis)
[2025-08-08 16:59:59,436] INFO [KafkaApi-1] produce cost (in microseconds), produce={count=6, max=3924.0, mean=2327.0} callback={count=6, max=153492.0, mean=138422.5} ack={count=6, max=435.0, mean=374.8333333333333} (kafka.server.streamaspect.ElasticKafkaApis)
[2025-08-08 17:01:00,329] INFO [KafkaApi-1] produce cost (in microseconds), produce={count=6, max=3313.0, mean=2410.0} callback={count=6, max=150469.0, mean=137648.5} ack={count=6, max=619.0, mean=406.6666666666667} (kafka.server.streamaspect.ElasticKafkaApis)
[2025-08-08 17:02:01,287] INFO [KafkaApi-1] produce cost (in microseconds), produce={count=6, max=3824.0, mean=2792.5} callback={count=6, max=163874.0, mean=145561.83333333334} ack={count=6, max=2124.0, mean=660.6666666666666} (kafka.server.streamaspect.ElasticKafkaApis)
[2025-08-08 17:03:02,174] INFO [KafkaApi-1] produce cost (in microseconds), produce={count=6, max=3797.0, mean=2665.0} callback={count=6, max=142073.0, mean=134775.66666666666} ack={count=6, max=623.0, mean=455.1666666666667} (kafka.server.streamaspect.ElasticKafkaApis)
[2025-08-08 17:04:03,133] INFO [KafkaApi-1] produce cost (in microseconds), produce={count=6, max=3055.0, mean=2267.6666666666665} callback={count=6, max=157041.0, mean=145624.33333333334} ack={count=6, max=440.0, mean=356.3333333333333} (kafka.server.streamaspect.ElasticKafkaApis)
[2025-08-08 17:05:04,072] INFO [KafkaApi-1] produce cost (in microseconds), produce={count=6, max=3045.0, mean=2489.8333333333335} callback={count=6, max=167366.0, mean=147001.33333333334} ack={count=6, max=818.0, mean=417.0} (kafka.server.streamaspect.ElasticKafkaApis)
[2025-08-08 17:06:05,001] INFO [KafkaApi-1] produce cost (in microseconds), produce={count=6, max=2589.0, mean=2231.0} callback={count=6, max=154194.0, mean=140797.83333333334} ack={count=6, max=601.0, mean=388.6666666666667} (kafka.server.streamaspect.ElasticKafkaApis)
[2025-08-08 17:07:05,870] INFO [KafkaApi-1] produce cost (in microseconds), produce={count=6, max=3166.0, mean=2409.5} callback={count=6, max=160933.0, mean=133609.0} ack={count=6, max=403.0, mean=364.5} (kafka.server.streamaspect.ElasticKafkaApis)
[2025-08-08 17:08:06,799] INFO [KafkaApi-1] produce cost (in microseconds), produce={count=6, max=4392.0, mean=2719.8333333333335} callback={count=6, max=168203.0, mean=143344.83333333334} ack={count=6, max=682.0, mean=387.3333333333333} (kafka.server.streamaspect.ElasticKafkaApis)
[2025-08-08 17:08:30,554] INFO [GroupCoordinator 1]: Dynamic member with unknown member id joins group console-consumer-2126 in Empty state. Created a new member id console-consumer-0a2a1760-95fa-435d-822b-9d2231a3c305 and request the member to rejoin with this id. (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 17:08:30,557] INFO [GroupCoordinator 1]: Preparing to rebalance group console-consumer-2126 in state PreparingRebalance with old generation 0 (__consumer_offsets-10) (reason: Adding new member console-consumer-0a2a1760-95fa-435d-822b-9d2231a3c305 with group instance id None; client reason: need to re-join with the given member-id: console-consumer-0a2a1760-95fa-435d-822b-9d2231a3c305) (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 17:08:33,561] INFO [GroupCoordinator 1]: Stabilized group console-consumer-2126 generation 1 (__consumer_offsets-10) with 1 members (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 17:08:33,584] INFO [GroupCoordinator 1]: Assignment received from leader console-consumer-0a2a1760-95fa-435d-822b-9d2231a3c305 for group console-consumer-2126 for generation 1. The group has 1 members, 0 of which are static. (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 17:09:23,183] INFO [GroupCoordinator 1]: Preparing to rebalance group console-consumer-2126 in state PreparingRebalance with old generation 1 (__consumer_offsets-10) (reason: Removing member console-consumer-0a2a1760-95fa-435d-822b-9d2231a3c305 on LeaveGroup; client reason: the consumer is being closed) (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 17:09:23,183] INFO [GroupCoordinator 1]: Group console-consumer-2126 with generation 2 is now empty (__consumer_offsets-10) (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 17:09:23,186] INFO [GroupCoordinator 1]: Member MemberMetadata(memberId=console-consumer-0a2a1760-95fa-435d-822b-9d2231a3c305, groupInstanceId=None, clientId=console-consumer, clientHost=/127.0.0.1, sessionTimeoutMs=45000, rebalanceTimeoutMs=300000, supportedProtocols=List(range, cooperative-sticky)) has left group console-consumer-2126 through explicit `LeaveGroup`; client reason: the consumer is being closed (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 17:09:24,304] INFO [KafkaApi-1] produce cost (in microseconds), produce={count=9, max=3133.0, mean=2228.1111111111113} callback={count=9, max=8505470.0, mean=2004160.3333333333} ack={count=9, max=478.0, mean=352.55555555555554} (kafka.server.streamaspect.ElasticKafkaApis)
[2025-08-08 17:09:28,199] WARN [GroupCoordinator 1]: Failed to write empty metadata for group console-consumer-2126: The group is rebalancing, so a rejoin is needed. (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 17:09:31,883] INFO [GroupCoordinator 1]: Dynamic member with unknown member id joins group console-consumer-35519 in Empty state. Created a new member id console-consumer-a92b5f43-9585-4e09-9377-f0a78a60dc4b and request the member to rejoin with this id. (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 17:09:31,887] INFO [GroupCoordinator 1]: Preparing to rebalance group console-consumer-35519 in state PreparingRebalance with old generation 0 (__consumer_offsets-4) (reason: Adding new member console-consumer-a92b5f43-9585-4e09-9377-f0a78a60dc4b with group instance id None; client reason: need to re-join with the given member-id: console-consumer-a92b5f43-9585-4e09-9377-f0a78a60dc4b) (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 17:09:34,895] INFO [GroupCoordinator 1]: Stabilized group console-consumer-35519 generation 1 (__consumer_offsets-4) with 1 members (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 17:09:34,922] INFO [GroupCoordinator 1]: Assignment received from leader console-consumer-a92b5f43-9585-4e09-9377-f0a78a60dc4b for group console-consumer-35519 for generation 1. The group has 1 members, 0 of which are static. (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 17:09:39,937] INFO [GroupCoordinator 1]: Preparing to rebalance group console-consumer-35519 in state PreparingRebalance with old generation 1 (__consumer_offsets-4) (reason: Error REBALANCE_IN_PROGRESS when storing group assignment during SyncGroup (member: console-consumer-a92b5f43-9585-4e09-9377-f0a78a60dc4b)) (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 17:09:39,941] INFO [GroupCoordinator 1]: Stabilized group console-consumer-35519 generation 2 (__consumer_offsets-4) with 1 members (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 17:09:39,945] INFO [GroupCoordinator 1]: Assignment received from leader console-consumer-a92b5f43-9585-4e09-9377-f0a78a60dc4b for group console-consumer-35519 for generation 2. The group has 1 members, 0 of which are static. (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 17:09:45,006] INFO [GroupCoordinator 1]: Preparing to rebalance group console-consumer-35519 in state PreparingRebalance with old generation 2 (__consumer_offsets-4) (reason: Error REBALANCE_IN_PROGRESS when storing group assignment during SyncGroup (member: console-consumer-a92b5f43-9585-4e09-9377-f0a78a60dc4b)) (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 17:09:45,049] INFO [GroupCoordinator 1]: Stabilized group console-consumer-35519 generation 3 (__consumer_offsets-4) with 1 members (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 17:09:45,054] INFO [GroupCoordinator 1]: Assignment received from leader console-consumer-a92b5f43-9585-4e09-9377-f0a78a60dc4b for group console-consumer-35519 for generation 3. The group has 1 members, 0 of which are static. (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 17:09:50,061] INFO [GroupCoordinator 1]: Preparing to rebalance group console-consumer-35519 in state PreparingRebalance with old generation 3 (__consumer_offsets-4) (reason: Error REBALANCE_IN_PROGRESS when storing group assignment during SyncGroup (member: console-consumer-a92b5f43-9585-4e09-9377-f0a78a60dc4b)) (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 17:09:50,065] INFO [GroupCoordinator 1]: Stabilized group console-consumer-35519 generation 4 (__consumer_offsets-4) with 1 members (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 17:09:50,069] INFO [GroupCoordinator 1]: Assignment received from leader console-consumer-a92b5f43-9585-4e09-9377-f0a78a60dc4b for group console-consumer-35519 for generation 4. The group has 1 members, 0 of which are static. (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 17:09:55,073] INFO [GroupCoordinator 1]: Preparing to rebalance group console-consumer-35519 in state PreparingRebalance with old generation 4 (__consumer_offsets-4) (reason: Error REBALANCE_IN_PROGRESS when storing group assignment during SyncGroup (member: console-consumer-a92b5f43-9585-4e09-9377-f0a78a60dc4b)) (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 17:09:55,076] INFO [GroupCoordinator 1]: Stabilized group console-consumer-35519 generation 5 (__consumer_offsets-4) with 1 members (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 17:09:55,079] INFO [GroupCoordinator 1]: Assignment received from leader console-consumer-a92b5f43-9585-4e09-9377-f0a78a60dc4b for group console-consumer-35519 for generation 5. The group has 1 members, 0 of which are static. (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 17:10:00,084] INFO [GroupCoordinator 1]: Preparing to rebalance group console-consumer-35519 in state PreparingRebalance with old generation 5 (__consumer_offsets-4) (reason: Error REBALANCE_IN_PROGRESS when storing group assignment during SyncGroup (member: console-consumer-a92b5f43-9585-4e09-9377-f0a78a60dc4b)) (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 17:10:00,087] INFO [GroupCoordinator 1]: Stabilized group console-consumer-35519 generation 6 (__consumer_offsets-4) with 1 members (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 17:10:00,092] INFO [GroupCoordinator 1]: Assignment received from leader console-consumer-a92b5f43-9585-4e09-9377-f0a78a60dc4b for group console-consumer-35519 for generation 6. The group has 1 members, 0 of which are static. (kafka.coordinator.group.GroupCoordinator)
[2025-08-08 17:10:26,671] INFO [KafkaApi-1] produce cost (in microseconds), produce={count=4, max=4261.0, mean=2860.0} callback={count=4, max=8961681.0, mean=5577560.25} ack={count=4, max=1061.0, mean=542.5} (kafka.server.streamaspect.ElasticKafkaApis)
[2025-08-08 17:11:27,651] INFO [KafkaApi-1] produce cost (in microseconds), produce={count=5, max=2992.0, mean=2225.6} callback={count=5, max=2228909.0, mean=2180323.0} ack={count=5, max=372.0, mean=318.2} (kafka.server.streamaspect.ElasticKafkaApis)
[2025-08-08 17:12:28,751] INFO [KafkaApi-1] produce cost (in microseconds), produce={count=5, max=2402.0, mean=1966.2} callback={count=5, max=2290001.0, mean=2201461.2} ack={count=5, max=458.0, mean=312.0} (kafka.server.streamaspect.ElasticKafkaApis)
[2025-08-08 17:13:30,014] INFO [KafkaApi-1] produce cost (in microseconds), produce={count=5, max=3471.0, mean=2470.8} callback={count=5, max=2306403.0, mean=2242440.2} ack={count=5, max=434.0, mean=375.4} (kafka.server.streamaspect.ElasticKafkaApis)
[2025-08-08 17:14:15,240] INFO [GroupMetadataManager brokerId=1] Group console-consumer-2126 transitioned to Dead in generation 2 (kafka.coordinator.group.GroupMetadataManager)
[2025-08-08 17:14:31,235] INFO [KafkaApi-1] produce cost (in microseconds), produce={count=5, max=2247.0, mean=1817.2} callback={count=5, max=2318396.0, mean=2233596.0} ack={count=5, max=463.0, mean=349.6} (kafka.server.streamaspect.ElasticKafkaApis)
[2025-08-08 17:15:32,543] INFO [KafkaApi-1] produce cost (in microseconds), produce={count=5, max=2150.0, mean=1815.8} callback={count=5, max=2285172.0, mean=2252107.8} ack={count=5, max=330.0, mean=297.2} (kafka.server.streamaspect.ElasticKafkaApis)
[2025-08-08 17:16:33,861] INFO [KafkaApi-1] produce cost (in microseconds), produce={count=5, max=4837.0, mean=2877.6} callback={count=5, max=2469735.0, mean=2230272.8} ack={count=5, max=369.0, mean=335.6} (kafka.server.streamaspect.ElasticKafkaApis)
[2025-08-08 17:17:34,999] INFO [KafkaApi-1] produce cost (in microseconds), produce={count=5, max=2497.0, mean=2108.2} callback={count=5, max=2264553.0, mean=2207839.6} ack={count=5, max=697.0, mean=410.2} (kafka.server.streamaspect.ElasticKafkaApis)
[2025-08-08 17:18:37,232] INFO [KafkaApi-1] produce cost (in microseconds), produce={count=5, max=2607.0, mean=2109.2} callback={count=5, max=3253960.0, mean=2431240.4} ack={count=5, max=852.0, mean=503.4} (kafka.server.streamaspect.ElasticKafkaApis)
